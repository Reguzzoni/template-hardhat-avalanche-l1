{
	"info": {
		"_postman_id": "42a1e8a8-8e4d-4543-8ebc-deaa98d8af77",
		"name": "Avalanche ISP CK L1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20542689"
	},
	"item": [
		{
			"name": "EVM",
			"item": [
				{
					"name": "eth_baseFee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"<style>",
									"    button:hover{background-color:red;color:white;}",
									"    button:focus{background-color:red;color:white}",
									"    ",
									"    .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"             cursor: pointer;",
									"             top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"</style>",
									"",
									"<script>",
									"function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                toDec();",
									"            } ",
									"            else",
									"                toHex();",
									"        }",
									"",
									"function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"            return result;",
									"        }",
									"",
									"function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"function toDec() {",
									"    const value=document.getElementById(\"value\");",
									"    const fullHex = value.innerText;",
									"    const splitHex = fullHex.split(\"0x\");",
									"    const hexWithoutOx = splitHex[1];",
									"    const hexAsString = hexWithoutOx.toString();",
									"    const decimalNumber = convertBase(hexAsString, 16, 10);",
									"    value.innerHTML = decimalNumber;",
									"    var unit = document.getElementById(\"unit\");",
									"    unit.innerHTML = \"GWEI\";",
									"}",
									"",
									"function toHex() {",
									"    const value=document.getElementById(\"value\");",
									"    const decValue = value.innerText;",
									"    const hexNumber = convertBase(decValue, 10, 16);",
									"    value.innerHTML = \"0x\" + hexNumber;",
									"    var unit=document.getElementById(\"unit\");",
									"    unit.innerHTML = \"WEI\";",
									"}",
									"</script>",
									"",
									"<body onLoad = \"toDec()\"",
									"<b> Convert to decimal: </b>",
									"    <br>",
									"    <label class=\"switch\">",
									"                <input type=\"checkbox\" checked = \"true\" onclick=\"toggle(this);\">",
									"                <div class=\"slider\"></div>",
									"    </label>",
									"    <br>",
									"    <br>",
									"",
									"",
									"<table>",
									"<tr>",
									"<td> Base fee: </td>",
									"<td id=\"value\"> {{response.result}} </td>",
									"<td id=\"unit\"> WEI </td>",
									"</tr>",
									"</table>",
									"",
									"Please note that <b>1 AVAX = 10<sup>18</sup> WEI</b> and <b>1 WEI = 10<sup>9</sup> GWEI</b>",
									"",
									"`;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{bearerToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_baseFee\",\n    \"params\": [],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Get the base fee for the next block. [More info](https://docs.avax.network/apis/avalanchego/apis/c-chain#eth_basefee)"
					},
					"response": []
				},
				{
					"name": "eth_blockNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = JSON.parse(responseBody);",
									"var hexVal = jsonData.result",
									"",
									"",
									"",
									"var table = `",
									"",
									"<style>",
									"    .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"             cursor: pointer;",
									"             top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"</style>",
									"",
									"<script>",
									"",
									"function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                toDec();",
									"            } ",
									"            else",
									"                toHex();",
									"        }",
									"function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"            return result;",
									"        }",
									"",
									"function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"function toDec(){",
									"    const value=document.getElementById(\"value\");",
									"    const fullHex = value.innerText;",
									"    const splitHex = fullHex.split(\"0x\");",
									"    const hexWithoutOx = splitHex[1];",
									"    const hexAsString = hexWithoutOx.toString();",
									"    const decimalNumber = convertBase(hexAsString, 16, 10);",
									"    value.innerHTML = decimalNumber;",
									"}",
									"",
									"function toHex() {",
									"    const value=document.getElementById(\"value\");",
									"    const decValue = value.innerText;",
									"    const hexNumber = convertBase(decValue, 10, 16);",
									"    value.innerHTML = \"0x\" + hexNumber;",
									"}",
									"",
									"</script>",
									"",
									"<body onLoad = \"toDec()\"",
									"<b> Convert to decimal: </b>",
									"    <br>",
									"    <label class=\"switch\">",
									"                <input type=\"checkbox\" checked = \"true\" onclick=\"toggle(this);\">",
									"                <div class=\"slider\"></div>",
									"    </label>",
									"    <br>",
									"    <br>",
									"",
									"<table>",
									"    <tr>",
									"        <td> Block number: </td>",
									"        <td id=\"value\"> {{response.result}} </td>",
									"    </tr>",
									"</table>",
									"",
									"`;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_blockNumber\",\n    \"params\": [],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting the most recent block number."
					},
					"response": []
				},
				{
					"name": "eth_call",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_call\",\n    \"params\": [\n        {\n            \"to\": \"0x197E90f9FAD81970bA7976f33CbD77088E5D7cf7\",\n            \"data\": \"0xc92aecc4\"\n        },\n        \"latest\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Call a contract."
					},
					"response": []
				},
				{
					"name": "eth_chainId",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"",
									"<style>",
									"    .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"             cursor: pointer;",
									"             top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"</style>",
									"",
									"<script>",
									"",
									"function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                toDec();",
									"            } ",
									"            else",
									"                toHex();",
									"        }",
									"function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"            return result;",
									"        }",
									"",
									"function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"function toDec(){",
									"    const value=document.getElementById(\"value\");",
									"    const fullHex = value.innerText;",
									"    const splitHex = fullHex.split(\"0x\");",
									"    const hexWithoutOx = splitHex[1];",
									"    const hexAsString = hexWithoutOx.toString();",
									"    const decimalNumber = convertBase(hexAsString, 16, 10);",
									"    value.innerHTML = decimalNumber;",
									"}",
									"",
									"function toHex() {",
									"    const value=document.getElementById(\"value\");",
									"    const decValue = value.innerText;",
									"    const hexNumber = convertBase(decValue, 10, 16);",
									"    value.innerHTML = \"0x\" + hexNumber;",
									"}",
									"",
									"</script>",
									"",
									"<body onLoad = \"toDec()\"",
									"<b> Convert to decimal: </b>",
									"    <br>",
									"    <label class=\"switch\">",
									"                <input type=\"checkbox\" checked = \"true\" onclick=\"toggle(this);\">",
									"                <div class=\"slider\"></div>",
									"    </label>",
									"    <br>",
									"    <br>",
									"",
									"<table>",
									"    <tr>",
									"        <td> Chain ID: </td>",
									"        <td id=\"value\"> {{response.result}} </td>",
									"    </tr>",
									"</table>",
									"",
									"`;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_chainId\",\n    \"params\": [],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Not well documented in JSON-RPC references. See instead EIP694."
					},
					"response": []
				},
				{
					"name": "eth_getAssetBalance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"<script>",
									"",
									"function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"            return result;",
									"        }",
									"",
									"function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"function toDec() {",
									"    const value=document.getElementById(\"value\");",
									"    const fullHex = value.innerText;",
									"    const splitHex = fullHex.split(\"0x\");",
									"    const hexWithoutOx = splitHex[1];",
									"    const hexAsString = hexWithoutOx.toString();",
									"    const decimalNumber = convertBase(hexAsString, 16, 10);",
									"    const valueInAvax = decimalNumber / 10 ** 18",
									"    value.innerHTML = valueInAvax;",
									"    var unit = document.getElementById(\"unit\");",
									"    unit.innerHTML = \"AVAX\";",
									"}",
									"",
									"</script>",
									"",
									"<body onLoad = \"toDec()\">",
									"<table>",
									"<tr>",
									"<td> Balance: </td>",
									"</tr>",
									"<tr>",
									"<td> hex: </td>",
									"<td> {{response.result}} </td>",
									"<td id=\"unit\"> WEI </td>",
									"</tr>",
									"<tr>",
									"<td> dec: </td>",
									"<td id=\"value\"> {{response.result}}  </td>",
									"<td id=\"unit\"> AVAX </td>",
									"</tr>",
									"</table>",
									"",
									"Please note that 1 AVAX = 10<sup>18</sup> WEI",
									"",
									"`;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getAssetBalance\",\n    \"params\": [\n        \"{{cchainAddress}}\",\n        \"latest\",\n        \"2W4XDTMrQJm7YALcnCL4krU7JpoGQQaDkTdn2HbzpsqombHRaB\"\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting an account’s non-AVAX balance. [More info](https://docs.avax.network/apis/avalanchego/apis/c-chain#eth_getassetbalance)"
					},
					"response": []
				},
				{
					"name": "eth_getBalance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"<script>",
									"",
									"function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"            return result;",
									"        }",
									"",
									"function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"function toDec() {",
									"    const value=document.getElementById(\"value\");",
									"    const fullHex = value.innerText;",
									"    const splitHex = fullHex.split(\"0x\");",
									"    const hexWithoutOx = splitHex[1];",
									"    const hexAsString = hexWithoutOx.toString();",
									"    const decimalNumber = convertBase(hexAsString, 16, 10);",
									"    const valueInAvax = decimalNumber / 10 ** 18",
									"    value.innerHTML = valueInAvax;",
									"    var unit = document.getElementById(\"unit\");",
									"    unit.innerHTML = \"AVAX\";",
									"}",
									"",
									"</script>",
									"",
									"<body onLoad = \"toDec()\">",
									"<table>",
									"<tr>",
									"<td> Balance: </td>",
									"</tr>",
									"<tr>",
									"<td> hex: </td>",
									"<td> {{response.result}} </td>",
									"<td id=\"unit\"> WEI </td>",
									"</tr>",
									"<tr>",
									"<td> dec: </td>",
									"<td id=\"value\"> {{response.result}}  </td>",
									"<td id=\"unit\"> AVAX </td>",
									"</tr>",
									"</table>",
									"",
									"Please note that 1 AVAX = 10<sup>18</sup> WEI",
									"",
									"`;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getBalance\",\n    \"params\": [\n        \"{{cchainAddress}}\",\n        \"latest\"\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting an account’s balance."
					},
					"response": []
				},
				{
					"name": "eth_getChainConfig",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"id\"     :1,\n    \"method\" :\"eth_getChainConfig\",\n    \"params\" :[]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "`eth_getChainConfig` returns chain config. This API is enabled by default with `internal-eth` namespace. [More info](https://docs.avax.network/apis/avalanchego/apis/c-chain#eth_getchainconfig)"
					},
					"response": []
				},
				{
					"name": "eth_maxPriorityFeePerGas",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_maxPriorityFeePerGas\",\n    \"params\": [],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Get the priority fee needed to be included in a block. [More info](https://docs.avax.network/apis/avalanchego/apis/c-chain#eth_maxpriorityfeepergas)"
					},
					"response": []
				},
				{
					"name": "eth_signTransaction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_signTransaction\",\n    \"params\": [{\n        \"from\": \"0xa64b27635c967dfe9674926bc004626163ddce97\",\n        \"to\": \"0x1c5b0e12e90e9c52235babad76cfccab2519bb95\",\n        \"gas\": \"0x5208\",\n        \"gasPrice\": \"0x0\",\n        \"nonce\": \"0x0\",\n        \"value\": \"0x0\"\n    }],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Signing a transaction.\n\nThis method will create a signed transaction, but will not publish it automatically to the network. Instead, the `raw` result output should be used with `eth_sendRawTransaction` to execute the transaction."
					},
					"response": []
				},
				{
					"name": "eth_getTransactionCount",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getTransactionCount\",\n    \"params\": [\n        \"{{cchainAddress}}\",\n        \"latest\"\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting an account’s nonce."
					},
					"response": []
				},
				{
					"name": "eth_sendRawTransaction",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": 1,\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_sendRawTransaction\",\n    \"params\": [\n        \"0xf8628080825208941c5b0e12e90e9c52235babad76cfccab2519bb958080830150efa0308ca8002f3df1a468eea9973d2d618eb866e2ef0a57cba4d34efb3025b70a0aa0592b7b0a803e7b70ec26dd74ab85aa71126198eff5552e5be638e6e26a455ee0\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Send a raw transaction.\n\nExample below shows a raw transaction published to the network and its associated transaction hash."
					},
					"response": []
				},
				{
					"name": "eth_getBlockByHash",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"    <style type=\"text/css\">",
									"        table {border: 1px solid #000080; table-layout:fixed;}",
									"        td {border: 1px solid gray; word-wrap: break-word;max-width: 1000px;}",
									"        th {font-size:18px;background-color:#B0B0B0;}",
									"",
									"        .break {background-color:black;}",
									"    ",
									"        .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"             cursor: pointer;",
									"             top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"",
									"        </style>",
									"",
									"        <b> User Friendly View: </b>",
									"        <br>",
									"        <label class=\"switch\">",
									"                <input type=\"checkbox\" onclick=\"toggle(this);\" checked=\"true\">",
									"                <div class=\"slider\"></div>",
									"        </label>",
									"        <br>",
									"        <br>",
									"",
									"    <script>",
									"",
									"        function userFriendlyViewOn (){",
									"            switchToColor();",
									"            toDec();",
									"            convertTimeUTC();",
									"        }",
									"",
									"        function userFriendlyViewOFF (){",
									"            switchToGray();",
									"            toHex();",
									"            decimalTime();",
									"        }",
									"",
									"        function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                userFriendlyViewOn();",
									"            } else {",
									"                userFriendlyViewOFF();",
									"            }",
									"        }",
									"",
									"        function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"",
									"        function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"",
									"            return result;",
									"        }",
									"",
									"        function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"        function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"        function toDec() {",
									"            {{#if response.result.transactions}}",
									"                var value0=document.getElementsByClassName(\"value\");",
									"                for ( let i=0; i < value0.length; i++ ){",
									"                    ",
									"                    var fullHex0 = value0[i].innerText;",
									"                    var splitHex0 = fullHex0.split(\"0x\");",
									"                    var hexWithoutOx0 = splitHex0[1];",
									"                    var hexAsString0 = hexWithoutOx0.toString();",
									"                    var decimalNumber0 = convertBase(hexAsString0, 16, 10);",
									"                    ",
									"                    value0[i].innerHTML = decimalNumber0 + \" Wei \" + \" = <b>\"  + decimalNumber0 / (10 ** 18) + \"  Avax\" +  \"</b>\" ;",
									"                }",
									"    ",
									"                var value1=document.getElementsByClassName(\"blockNumber\");",
									"                for ( let i=0; i < value1.length; i++ ){",
									"                    ",
									"                    var fullHex1 = value1[i].innerText;",
									"                    var splitHex1 = fullHex1.split(\"0x\");",
									"                    var hexWithoutOx1 = splitHex1[1];",
									"                    var hexAsString1 = hexWithoutOx1.toString();",
									"                    var decimalNumber1 = convertBase(hexAsString1, 16, 10);",
									"                ",
									"                    value1[i].innerHTML = decimalNumber1;",
									"                }",
									"",
									"                var value2=document.getElementsByClassName(\"gas\");",
									"                for ( let i=0; i < value2.length; i++ ){",
									"        ",
									"                    var fullHex2 = value2[i].innerText;",
									"                    var splitHex2 = fullHex2.split(\"0x\");",
									"                    var hexWithoutOx2 = splitHex2[1];",
									"                    var hexAsString2 = hexWithoutOx2.toString();",
									"                    var decimalNumber2 = convertBase(hexAsString2, 16, 10);",
									"                    var numberWithCommas2 = Number(decimalNumber2).toLocaleString();",
									"                    ",
									"                    value2[i].innerHTML = numberWithCommas2;",
									"                }",
									"        ",
									"        ",
									"                var value3=document.getElementsByClassName(\"gasPrice\");",
									"                for ( let i=0; i < value3.length; i++ ){",
									"                    ",
									"                    var fullHex3 = value3[i].innerText;",
									"                    var splitHex3 = fullHex3.split(\"0x\");",
									"                    var hexWithoutOx3 = splitHex3[1];",
									"                    var hexAsString3 = hexWithoutOx3.toString();",
									"                    var decimalNumber3 = convertBase(hexAsString3, 16, 10);",
									"                    var nAvax3 = decimalNumber3 / (10 ** 9);",
									"                    ",
									"                    value3[i].innerHTML = decimalNumber3 + \" Wei \" + \" = <b>\"  +  nAvax3 +  \" nAvax </b>\" ;",
									"                }",
									"        ",
									"                ",
									"                var value4 = document.getElementsByClassName(\"maxFeePerGas\");",
									"                for ( let i=0; i < value4.length; i++ ){",
									"                        ",
									"                    var fullHex4 = value4[i].innerText;",
									"                    var splitHex4 = fullHex4.split(\"0x\");",
									"                    var hexWithoutOx4 = splitHex4[1];",
									"                    var hexAsString4 = hexWithoutOx4.toString();",
									"                    var decimalNumber4 = convertBase(hexAsString4, 16, 10);",
									"                    var nAvax4 = decimalNumber4 / (10 ** 9);",
									"                        ",
									"                    value4[i].innerHTML = decimalNumber4 + \" Wei \" + \" = <b>\"  +  nAvax4 +  \" nAvax </b>\" ;",
									"                }",
									"            ",
									"                var value5 = document.getElementsByClassName(\"maxPriorityFeePerGas\");",
									"                for ( let i=0; i < value5.length; i++ ){",
									"                        ",
									"                    var fullHex5 = value5[i].innerText;",
									"                    var splitHex5 = fullHex5.split(\"0x\");",
									"                    var hexWithoutOx5 = splitHex5[1];",
									"                    var hexAsString5 = hexWithoutOx5.toString();",
									"                    var decimalNumber5 = convertBase(hexAsString5, 16, 10);",
									"                    var nAvax5 = decimalNumber5 / (10 ** 9);",
									"                        ",
									"                    value5[i].innerHTML = decimalNumber5 + \" Wei \" + \" = <b>\"  +  nAvax5 +  \" nAvax </b>\" ;",
									"                }",
									"            ",
									"                var value6=document.getElementsByClassName(\"nonce\");",
									"                for ( let i=0; i < value6.length; i++ ){",
									"                    ",
									"                    var fullHex6 = value6[i].innerText;",
									"                    var splitHex6 = fullHex6.split(\"0x\");",
									"                    var hexWithoutOx6 = splitHex6[1];",
									"                    var hexAsString6 = hexWithoutOx6.toString();",
									"                    var decimalNumber6 = convertBase(hexAsString6, 16, 10);",
									"                    ",
									"                    value6[i].innerHTML = decimalNumber6;",
									"                }",
									"        ",
									"                var value7=document.getElementsByClassName(\"transactionIndex\");",
									"                for ( let i=0; i < value7.length; i++ ){",
									"                    ",
									"                    var fullHex7 = value7[i].innerText;",
									"                    var splitHex7 = fullHex7.split(\"0x\");",
									"                    var hexWithoutOx7 = splitHex7[1];",
									"                    var hexAsString7 = hexWithoutOx7.toString();",
									"                    var decimalNumber7 = convertBase(hexAsString7, 16, 10);",
									"                    ",
									"                    value7[i].innerHTML = decimalNumber7;",
									"                }",
									"        ",
									"                var value8=document.getElementsByClassName(\"type\");",
									"                for ( let i=0; i < value8.length; i++ ){",
									"                    ",
									"                    var fullHex8 = value8[i].innerText;",
									"                    var splitHex8 = fullHex8.split(\"0x\");",
									"                    var hexWithoutOx8 = splitHex8[1];",
									"                    var hexAsString8 = hexWithoutOx8.toString();",
									"                    var decimalNumber8 = convertBase(hexAsString8, 16, 10);",
									"                    ",
									"                    if( decimalNumber8 == 0 ) {",
									"                        value8[i].innerHTML = decimalNumber8 + \" (legacy)\";",
									"                    } else if( decimalNumber8 == 2) {",
									"                        value8[i].innerHTML = decimalNumber8 + \" (EIP-1559)\";",
									"                    }",
									"                }",
									"            ",
									"                var value9=document.getElementsByClassName(\"chainId\");",
									"                for ( let i=0; i < value9.length; i++ ){",
									"                    ",
									"                    var fullHex9 = value9[i].innerText;",
									"                    var splitHex9 = fullHex9.split(\"0x\");",
									"                    var hexWithoutOx9 = splitHex9[1];",
									"                    var hexAsString9 = hexWithoutOx9.toString();",
									"                    var decimalNumber9 = convertBase(hexAsString9, 16, 10);",
									"                    ",
									"                    value9[i].innerHTML = decimalNumber9;",
									"                }",
									"            {{/if}}",
									"            ",
									"            {{#if response.result.baseFeePerGas}}",
									"                var value10=document.getElementById(\"baseFeePerGas\");",
									"",
									"                var fullHex10 = value10.innerText;",
									"                var splitHex10 = fullHex10.split(\"0x\");",
									"                var hexWithoutOx10 = splitHex10[1];",
									"                var hexAsString10 = hexWithoutOx10.toString();",
									"                var decimalNumber10 = convertBase(hexAsString10, 16, 10);",
									"                var nAvax10 = decimalNumber10 / (10 ** 9);",
									"                    ",
									"                value10.innerHTML = decimalNumber10 + \" Wei \" + \" = <b>\"  +  nAvax10 +  \" nAvax </b>\" ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.blockGasCost}}",
									"                var value11=document.getElementById(\"blockGasCost\");",
									"                    ",
									"                var fullHex11 = value11.innerText;",
									"                var splitHex11 = fullHex11.split(\"0x\");",
									"                var hexWithoutOx11 = splitHex11[1];",
									"                var hexAsString11 = hexWithoutOx11.toString();",
									"                var decimalNumber11 = convertBase(hexAsString11, 16, 10);",
									"                var nAvax11 = decimalNumber11 / (10 ** 9);",
									"                    ",
									"                value11.innerHTML = decimalNumber11 + \" Wei \" + \" = <b>\"  +  nAvax11 +  \" nAvax </b>\" ;",
									"            {{/if}}",
									"        ",
									"            {{#if response.result.difficulty}}",
									"                var value12=document.getElementById(\"difficulty\");",
									"                ",
									"                var fullHex12 = value12.innerText;",
									"                var splitHex12 = fullHex12.split(\"0x\");",
									"                var hexWithoutOx12 = splitHex12[1];",
									"                var hexAsString12 = hexWithoutOx12.toString();",
									"                var decimalNumber12 = convertBase(hexAsString12, 16, 10);",
									"                    ",
									"                value12.innerHTML = decimalNumber12;",
									"            {{/if}}",
									"",
									"            {{#if response.result.totalDifficulty}}",
									"                var value13 = document.getElementById(\"totalDifficulty\");",
									"                ",
									"                var fullHex13 = value13.innerText;",
									"                var splitHex13 = fullHex13.split(\"0x\");",
									"                var hexWithoutOx13 = splitHex13[1];",
									"                var hexAsString13 = hexWithoutOx13.toString();",
									"                var decimalNumber13 = convertBase(hexAsString13, 16, 10);",
									"                var numberWithCommas13 = Number(decimalNumber13).toLocaleString();",
									"                    ",
									"                value13.innerHTML = numberWithCommas13;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasLimit}}",
									"                var value14 = document.getElementById(\"gasLimit\");",
									"                ",
									"                var fullHex14 = value14.innerText;",
									"                var splitHex14 = fullHex14.split(\"0x\");",
									"                var hexWithoutOx14 = splitHex14[1];",
									"                var hexAsString14 = hexWithoutOx14.toString();",
									"                var decimalNumber14 = convertBase(hexAsString14, 16, 10);",
									"                var numberWithCommas14 = Number(decimalNumber14).toLocaleString();",
									"                    ",
									"                value14.innerHTML = numberWithCommas14;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasUsed}}",
									"                var value15 = document.getElementById(\"gasUsed\");",
									"                ",
									"                var fullHex15 = value15.innerText;",
									"                var splitHex15 = fullHex15.split(\"0x\");",
									"                var hexWithoutOx15 = splitHex15[1];",
									"                var hexAsString15 = hexWithoutOx15.toString();",
									"                var decimalNumber15 = convertBase(hexAsString15, 16, 10);",
									"                var numberWithCommas15 = Number(decimalNumber15).toLocaleString();",
									"                var percent = (decimalNumber15 * 100)/ decimalNumber14;",
									"                var percentRounded = percent.toFixed(2);",
									"                    ",
									"                value15.innerHTML = numberWithCommas15 + \" (\" + percentRounded + \"%)\" ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.number}}",
									"                var value16=document.getElementById(\"number\");",
									"                ",
									"                var fullHex16 = value16.innerText;",
									"                var splitHex16 = fullHex16.split(\"0x\");",
									"                var hexWithoutOx16 = splitHex16[1];",
									"                var hexAsString16 = hexWithoutOx16.toString();",
									"                var decimalNumber16 = convertBase(hexAsString16, 16, 10);",
									"                    ",
									"                value16.innerHTML = decimalNumber16;",
									"            {{/if}}",
									"",
									"            {{#if response.result.size}}",
									"                var value17 = document.getElementById(\"size\");",
									"                ",
									"                var fullHex17 = value17.innerText;",
									"                var splitHex17 = fullHex17.split(\"0x\");",
									"                var hexWithoutOx17 = splitHex17[1];",
									"                var hexAsString17 = hexWithoutOx17.toString();",
									"                var decimalNumber17 = convertBase(hexAsString17, 16, 10);",
									"                var numberWithCommas17 = Number(decimalNumber17).toLocaleString();",
									"                    ",
									"                value17.innerHTML = numberWithCommas17 + \" bytes\";",
									"            {{/if}}",
									"",
									"            {{#if response.result.extDataGasUsed}}",
									"                var value18 = document.getElementById(\"extDataGasUsed\");",
									"                ",
									"                var fullHex18 = value18.innerText;",
									"                var splitHex18 = fullHex18.split(\"0x\");",
									"                var hexWithoutOx18 = splitHex18[1];",
									"                var hexAsString18 = hexWithoutOx18.toString();",
									"                var decimalNumber18 = convertBase(hexAsString18, 16, 10);",
									"                var numberWithCommas18 = Number(decimalNumber18).toLocaleString();",
									"                    ",
									"                value18.innerHTML = numberWithCommas18;",
									"            {{/if}}",
									"",
									"        }  ",
									"",
									"        function toHex() {",
									"            {{#if response.result.transactions}}",
									"                var value0=document.getElementsByClassName(\"value\");",
									"                for ( let i=0; i < value0.length; i++ ){",
									"                    ",
									"                    var decNumber0 = value0[i].innerText;",
									"                    var getNumber0 = decNumber0.split(' Wei');",
									"                    var obtainedNumber0 = getNumber0[0];",
									"                    var asString0 = obtainedNumber0.toString();",
									"                    var hexString0 = convertBase(asString0, 10, 16);",
									"",
									"                    value0[i].innerHTML = \"0x\" +  hexString0  ;",
									"                }",
									"    ",
									"                var value1=document.getElementsByClassName(\"blockNumber\");",
									"                for ( let i=0; i < value1.length; i++ ){",
									"                    ",
									"                    var decNumber1 = value1[i].innerText;",
									"                    var asString1 = decNumber1.toString();",
									"                    var hexString1 = convertBase(asString1, 10, 16);",
									"",
									"                    value1[i].innerHTML = \"0x\" + hexString1 ;",
									"                }",
									"",
									"                var value2=document.getElementsByClassName(\"gas\");",
									"                for ( let i=0; i < value2.length; i++ ){",
									"                    ",
									"                    var decNumber2 = value2[i].innerText;",
									"                    var removeCommas2 = parseFloat(decNumber2.toString().replace(/,/g, \"\"));",
									"                    var asString2 = removeCommas2.toString();",
									"                    var hexString2 = convertBase(asString2, 10, 16);",
									"                    ",
									"                    value2[i].innerHTML = \"0x\" + hexString2 ;",
									"                }",
									"        ",
									"                var value3=document.getElementsByClassName(\"gasPrice\");",
									"                for ( let i=0; i < value3.length; i++ ){",
									"                    ",
									"                    var decNumber3 = value3[i].innerText;",
									"                    var getNumber3 = decNumber3.split(' Wei');",
									"                    var obtainedNumber3 = getNumber3[0];",
									"                    var asString3 = obtainedNumber3.toString();",
									"                    var hexString3 = convertBase(asString3, 10, 16);",
									"",
									"                    value3[i].innerHTML = \"0x\" +  hexString3  ;",
									"                }",
									"        ",
									"                var value4 = document.getElementsByClassName(\"maxFeePerGas\");",
									"                for ( let i=0; i < value4.length; i++ ){",
									"                        ",
									"                    var decNumber4 = value4[i].innerText;",
									"                    var getNumber4 = decNumber4.split(' Wei');",
									"                    var obtainedNumber4 = getNumber4[0];",
									"                    var asString4 = obtainedNumber4.toString();",
									"                    var hexString4 = convertBase(asString4, 10, 16);",
									"",
									"                    value4[i].innerHTML = \"0x\" +  hexString4  ;",
									"                }",
									"            ",
									"                var value5 = document.getElementsByClassName(\"maxPriorityFeePerGas\");",
									"                for ( let i=0; i < value5.length; i++ ){",
									"                        ",
									"                    var decNumber5 = value5[i].innerText;",
									"                    var getNumber5 = decNumber5.split(' Wei');",
									"                    var obtainedNumber5 = getNumber5[0];",
									"                    var asString5 = obtainedNumber5.toString();",
									"                    var hexString5 = convertBase(asString5, 10, 16);",
									"",
									"                    value5[i].innerHTML = \"0x\" +  hexString5  ;",
									"                }",
									"            ",
									"                var value6=document.getElementsByClassName(\"nonce\");",
									"                for ( let i=0; i < value6.length; i++ ){",
									"                    ",
									"                    var decNumber6 = value6[i].innerText;",
									"                    var asString6 = decNumber6.toString();",
									"                    var hexString6 = convertBase(asString6, 10, 16);",
									"",
									"                    value6[i].innerHTML = \"0x\" + hexString6 ;",
									"                }",
									"        ",
									"                var value7=document.getElementsByClassName(\"transactionIndex\");",
									"                for ( let i=0; i < value7.length; i++ ){",
									"                    ",
									"                    var decNumber7 = value7[i].innerText;",
									"                    var asString7 = decNumber7.toString();",
									"                    var hexString7 = convertBase(asString7, 10, 16);",
									"",
									"                    value7[i].innerHTML = \"0x\" + hexString7 ;",
									"                }",
									"        ",
									"                var value8=document.getElementsByClassName(\"type\");",
									"                for ( let i=0; i < value8.length; i++ ){",
									"                    ",
									"                    var decNumber8 = value8[i].innerText;",
									"                    var getNumber8 = decNumber8.split(' (');",
									"                    var obtainedNumber8 = getNumber8[0];",
									"                    var asString8 = obtainedNumber8.toString();",
									"                    var hexString8 = convertBase(asString8, 10, 16);",
									"",
									"                    value8[i].innerHTML = \"0x\" +  hexString8  ;      ",
									"                }",
									"            ",
									"                var value9=document.getElementsByClassName(\"chainId\");",
									"                for ( let i=0; i < value9.length; i++ ){",
									"                    ",
									"                    var decNumber9 = value9[i].innerText;",
									"                    var asString9 = decNumber9.toString();",
									"                    var hexString9 = convertBase(asString9, 10, 16);",
									"",
									"                    value9[i].innerHTML = \"0x\" + hexString9 ;",
									"                }",
									"            {{/if}}",
									"",
									"            {{#if response.result.baseFeePerGas}}",
									"                var value10 = document.getElementById(\"baseFeePerGas\");",
									"",
									"                var decNumber10 = value10.innerText;",
									"                var getNumber10 = decNumber10.split(' Wei');",
									"                var obtainedNumber10 = getNumber10[0];",
									"                var asString10 = obtainedNumber10.toString();",
									"                var hexString10 = convertBase(asString10, 10, 16);",
									"",
									"                value10.innerHTML = \"0x\" +  hexString10  ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.blockGasCost}}",
									"                var value11 = document.getElementById(\"blockGasCost\");",
									"",
									"                var decNumber11 = value11.innerText;",
									"                var getNumber11 = decNumber11.split(' Wei');",
									"                var obtainedNumber11 = getNumber11[0];",
									"                var asString11 = obtainedNumber11.toString();",
									"                var hexString11 = convertBase(asString11, 10, 16);",
									"",
									"                value11.innerHTML = \"0x\" +  hexString11  ;",
									"            {{/if}}",
									"            ",
									"            {{#if response.result.difficulty}}",
									"                var value12=document.getElementById(\"difficulty\");",
									"                    ",
									"                var decNumber12 = value12.innerText;",
									"                var asString12 = decNumber12.toString();",
									"                var hexString12 = convertBase(asString12, 10, 16);",
									"",
									"                value12.innerHTML = \"0x\" + hexString12 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.totalDifficulty}}",
									"                var value13=document.getElementById(\"totalDifficulty\");",
									"",
									"                var decNumber13 = value13.innerText;",
									"                var removeCommas13 = parseFloat(decNumber13.toString().replace(/,/g, \"\"));",
									"                var asString13 = removeCommas13.toString();",
									"                var hexString13 = convertBase(asString13, 10, 16);",
									"                    ",
									"                value13.innerHTML = \"0x\" + hexString13 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasLimit}}",
									"                var value14 = document.getElementById(\"gasLimit\");",
									"                var decNumber14 = value14.innerText;",
									"                var removeCommas14 = parseFloat(decNumber14.toString().replace(/,/g, \"\"));",
									"                var asString14 = removeCommas14.toString();",
									"                var hexString14 = convertBase(asString14, 10, 16);",
									"                    ",
									"                value14.innerHTML = \"0x\" + hexString14 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasUsed}}",
									"                var value15 = document.getElementById(\"gasUsed\");",
									"                var decNumber15 = value15.innerText;",
									"                var getNumber15 = decNumber15.split(' (');",
									"                var lng = getNumber15.length;",
									"                var removeCommas15 = parseFloat(getNumber15[lng-2].toString().replace(/,/g, \"\"));",
									"                var asString15 = removeCommas15.toString();",
									"                var hexString15 = convertBase(asString15, 10, 16);",
									"                ",
									"                value15.innerHTML = \"0x\" + hexString15 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.number}}",
									"                var value16=document.getElementById(\"number\");",
									"                    ",
									"                var decNumber16 = value16.innerText;",
									"                var asString16 = decNumber16.toString();",
									"                var hexString16 = convertBase(asString16, 10, 16);",
									"",
									"                value16.innerHTML = \"0x\" + hexString16 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.size}}",
									"                var value16 = document.getElementById(\"size\");",
									"                var decNumber16 = value16.innerText;",
									"                var getNumber16 = decNumber16.split(' bytes');",
									"                var removeCommas16 = parseFloat(getNumber16[0].toString().replace(/,/g, \"\"));",
									"                var asString16 = removeCommas16.toString();",
									"                var hexString16 = convertBase(asString16, 10, 16);",
									"                ",
									"                value16.innerHTML = \"0x\" + hexString16 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.extDataGasUsed}}",
									"                var value17 = document.getElementById(\"extDataGasUsed\");",
									"                var decNumber17 = value17.innerText;",
									"                var removeCommas17 = parseFloat(decNumber17.toString().replace(/,/g, \"\"));",
									"                var asString17 = removeCommas17.toString();",
									"                var hexString17 = convertBase(asString17, 10, 16);",
									"                    ",
									"                value17.innerHTML = \"0x\" + hexString17 ;",
									"            {{/if}}",
									"                ",
									"        }  ",
									"        ",
									"        function convertTimeUTC() {",
									"            var timestamp={{response.result.timestamp}};",
									"",
									"            var d = new Date(timestamp * 1000), ",
									"                yyyy = d.getFullYear(),",
									"                mm = ('0' + (d.getMonth() + 1)).slice(-2),  ",
									"                dd = ('0' + d.getDate()).slice(-2),       ",
									"                hh = d.getHours(),",
									"                h = hh,",
									"                min = ('0' + d.getMinutes()).slice(-2),     ",
									"                sec = ('0' + d.getSeconds()).slice(-2),",
									"                ampm = 'AM',",
									"                x=d.toUTCString();",
									"                time;",
									"",
									"            if (hh > 12) {",
									"                h = hh - 12;",
									"                ampm = 'PM';",
									"            } else if (hh === 12) {",
									"                h = 12;",
									"                ampm = 'PM';",
									"            } else if (hh == 0) {",
									"                h = 12;",
									"            }",
									"",
									"            ",
									"            time = yyyy + \"-\" + mm + \"-\" + dd + \", \" + h + \":\" + min + \":\" + sec + \" \" + ampm;",
									"            ",
									"            var createDate = new Date();",
									"            var offset = createDate.getTimezoneOffset(); ",
									"            var createDate = (-offset)/60;",
									"",
									"            const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;",
									"",
									"",
									"            var showTime=document.getElementById(\"time\");",
									"            if ( createDate > 0 ) {",
									"                showTime.innerHTML = time + \" \" + \"UTC +\" + createDate + \" (\" + timezone + \")\";",
									"                }",
									"            else {",
									"                showTime.innerHTML = time + \" \" + \"UTC \" + createDate;",
									"            }",
									"",
									"        }",
									"",
									"        function decimalTime() {",
									"            var showTime=document.getElementById(\"time\");",
									"            showTime.innerHTML = {{response.result.timestamp}};",
									"        }",
									"",
									"        function switchToColor() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"#F2D9D9\";",
									"                }",
									"",
									"            var block2 = document.getElementsByClassName(\"blockInfo2\")",
									"            for (let i = 0; i < block2.length; i++) {",
									"                block2[i].style.backgroundColor = \"#FFFDD0\";",
									"                }",
									"            ",
									"            var txHeader = document.getElementById(\"transactionsHeader\");",
									"            txHeader.style.backgroundColor = \"#FFDEAD\";",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"#F0F8FF\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"#FFCCCB\";",
									"                }",
									"        ",
									"            var vrs = document.getElementsByClassName(\"vrs\");",
									"            for (let i = 0; i < vrs.length; i++) {",
									"                vrs[i].style.backgroundColor = \"#E6E6FA\";",
									"                }",
									"        ",
									"            var chain = document.getElementsByClassName(\"chainInfo\");",
									"            for (let i = 0; i < chain.length; i++) {",
									"                chain[i].style.backgroundColor = \"#ECFFDC\";",
									"                }",
									"",
									"        }",
									"",
									"        function switchToGray() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"            var block2 = document.getElementsByClassName(\"blockInfo2\")",
									"            for (let i = 0; i < block2.length; i++) {",
									"                block2[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"            var txHeader = document.getElementById(\"transactionsHeader\");",
									"            txHeader.style.backgroundColor = \"transparent\";",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"transparent\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"            var vrs = document.getElementsByClassName(\"vrs\");",
									"            for (let i = 0; i < vrs.length; i++) {",
									"                vrs[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"            const chain = document.getElementsByClassName(\"chainInfo\");",
									"            for (let i = 0; i < chain.length; i++) {",
									"                chain[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"        }",
									"",
									"    </script>",
									"",
									"    <body onLoad = \"userFriendlyViewOn()\">",
									"",
									"    <table>",
									"        <tr>",
									"            <th colspan=\"3\"> Block: </th>",
									"        </tr>",
									"            ",
									"        <tr>",
									"        <td class = \"blockInfo\"> Base fee per gas: </td>",
									"        <td class = \"blockInfo\" id=\"baseFeePerGas\" colspan=\"2\"> {{response.result.baseFeePerGas}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Block gas cost: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"blockGasCost\"> {{response.result.blockGasCost}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Difficulty: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"difficulty\"> {{response.result.difficulty}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Extra gas used: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"extDataGasUsed\"> {{response.result.extDataGasUsed}} </td>",
									"        </tr>",
									"",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Extra data hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.extDataHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Extra data: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.extraData}} </td>",
									"        </tr>",
									"",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Gas limit: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"gasLimit\"> {{response.result.gasLimit}} </td>",
									"        </tr>",
									"",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Gas used: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"gasUsed\"> {{response.result.gasUsed}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.hash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Logs bloom: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.logsBloom}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Miner: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.miner}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Mix hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.mixHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Nonce: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"nonce\"> {{response.result.nonce}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Number: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"number\"> {{response.result.number}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Parent hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.parentHash}} </td>",
									"        </tr>",
									"        ",
									"        <tr>",
									"        <td class = \"blockInfo\"> Receipts root: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.receiptsRoot}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Sha3 uncles: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.sha3Uncles}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Size: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"size\"> {{response.result.size}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> State root: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.stateRoot}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Timestamp: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"time\"> {{response.result.timestamp}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Total difficulty: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"totalDifficulty\"> {{response.result.totalDifficulty}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td colspan=\"3\" id=\"transactionsHeader\"> Block's transactions: </td>",
									"        </tr>",
									"        ",
									"        {{#each response.result.transactions}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"blockInfo2\"> Block hash: </td>",
									"            <td class = \"blockInfo2\" colspan=\"2\"> {{blockHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"blockInfo2\"> Block number: </td>",
									"            <td class = \"blockInfo2 blockNumber\"> {{blockNumber}}</td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td>",
									"            <td class = \"gasInfo\"> Gas: </td>",
									"            <td class = \"gasInfo gas\"> {{gas}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"gasInfo\"> Gas price: </td>",
									"            <td class = \"gasInfo gasPrice\"> {{gasPrice}} </td>",
									"        </tr>",
									"        ",
									"        {{#if maxFeePerGas}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"gasInfo\"> Max fee per gas: </td>",
									"            <td class = \"gasInfo maxFeePerGas\"> {{maxFeePerGas}} </td>",
									"        </tr>",
									"        {{/if}}",
									"  ",
									"",
									"        {{#if maxPriorityFeePerGas}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"gasInfo\"> Max priority fee per gas: </td>",
									"            <td class = \"gasInfo maxPriorityFeePerGas\"> {{maxPriorityFeePerGas}} </td>",
									"        </tr>",
									"        {{/if}}",
									"       ",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Transaction Hash: </td>",
									"            <td class = \"txInfo\"> {{hash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Input: </td>",
									"            <td class = \"txInfo\"> {{input}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Nonce: </td>",
									"            <td class = \"txInfo nonce\"> {{nonce}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> From: </td>",
									"            <td class = \"txInfo\"> {{from}} </td>",
									"        </tr>",
									"      ",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> To: </td>",
									"            <td class = \"txInfo\"> {{to}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Transaction index: </td>",
									"            <td class = \"txInfo transactionIndex\"> {{transactionIndex}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Value: </td>",
									"            <td class = \"txInfo value\"> {{value}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Type: </td>",
									"            <td class = \"txInfo type\"> {{type}} </td>",
									"        </tr>",
									"",
									"        {{#if response.result.accessList}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Input: </td>",
									"            <td class = \"txInfo\"> {{accessList}} </td>",
									"        </tr>",
									"        {{/if}}",
									"     ",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"chainInfo\"> Chain ID: </td>",
									"            <td class = \"chainInfo chainId\"> {{chainId}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"vrs\"> v: </td>",
									"            <td class = \"vrs\"> {{v}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"vrs\"> r: </td>",
									"            <td class = \"vrs\"> {{r}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"vrs\"> s: </td>",
									"            <td class = \"vrs\"> {{s}} </td>",
									"        </tr>",
									"",
									"          <tr>",
									"            <td> </td>",
									"            <td class = \"break\"> </td>",
									"            <td class = \"break\"> </td>",
									"        </tr>",
									"",
									"        {{/each}}",
									"",
									"      <tr>",
									"        <td class = \"blockInfo\"> Transactions root: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.transactionsRoot}} </td>",
									"      </tr>",
									"    ",
									"      {{#if response.result.uncles}}",
									"      <tr>",
									"        <td class = \"blockInfo\"> Uncles: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.uncles}} </td>",
									"      </tr>",
									"      {{/if}}",
									"   ",
									"    </table>",
									"  `;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getBlockByHash\",\n    \"params\": [\n        \"0x40aff31697d62101d521017897880c72759b89d22bd1b055b4ca00a0233e1a13\",\n        true\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting a block by hash."
					},
					"response": []
				},
				{
					"name": "eth_getBlockByNumber",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"    <style type=\"text/css\">",
									"        table {border: 1px solid #000080; table-layout:fixed;}",
									"        td {border: 1px solid gray; word-wrap: break-word;max-width: 1000px;}",
									"        th {font-size:18px;background-color:#B0B0B0;}",
									"",
									"        .break {background-color:black;}",
									"    ",
									"        .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"             cursor: pointer;",
									"             top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"",
									"        </style>",
									"",
									"        <b> User Friendly View: </b>",
									"        <br>",
									"        <label class=\"switch\">",
									"                <input type=\"checkbox\" onclick=\"toggle(this);\" checked=\"true\">",
									"                <div class=\"slider\"></div>",
									"        </label>",
									"        <br>",
									"        <br>",
									"",
									"    <script>",
									"",
									"        function userFriendlyViewOn (){",
									"            switchToColor();",
									"            toDec();",
									"            convertTimeUTC();",
									"        }",
									"",
									"        function userFriendlyViewOFF (){",
									"            switchToGray();",
									"            toHex();",
									"            decimalTime();",
									"        }",
									"",
									"        function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                userFriendlyViewOn();",
									"            } else {",
									"                userFriendlyViewOFF();",
									"            }",
									"        }",
									"",
									"        function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"",
									"        function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"",
									"            return result;",
									"        }",
									"",
									"        function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"        function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"        function toDec() {",
									"            {{#if response.result.transactions}}",
									"                var value0=document.getElementsByClassName(\"value\");",
									"                for ( let i=0; i < value0.length; i++ ){",
									"                    ",
									"                    var fullHex0 = value0[i].innerText;",
									"                    var splitHex0 = fullHex0.split(\"0x\");",
									"                    var hexWithoutOx0 = splitHex0[1];",
									"                    var hexAsString0 = hexWithoutOx0.toString();",
									"                    var decimalNumber0 = convertBase(hexAsString0, 16, 10);",
									"                    ",
									"                    value0[i].innerHTML = decimalNumber0 + \" Wei \" + \" = <b>\"  + decimalNumber0 / (10 ** 18) + \"  Avax\" +  \"</b>\" ;",
									"                }",
									"    ",
									"                var value1=document.getElementsByClassName(\"blockNumber\");",
									"                for ( let i=0; i < value1.length; i++ ){",
									"                    ",
									"                    var fullHex1 = value1[i].innerText;",
									"                    var splitHex1 = fullHex1.split(\"0x\");",
									"                    var hexWithoutOx1 = splitHex1[1];",
									"                    var hexAsString1 = hexWithoutOx1.toString();",
									"                    var decimalNumber1 = convertBase(hexAsString1, 16, 10);",
									"                ",
									"                    value1[i].innerHTML = decimalNumber1;",
									"                }",
									"",
									"                var value2=document.getElementsByClassName(\"gas\");",
									"                for ( let i=0; i < value2.length; i++ ){",
									"        ",
									"                    var fullHex2 = value2[i].innerText;",
									"                    var splitHex2 = fullHex2.split(\"0x\");",
									"                    var hexWithoutOx2 = splitHex2[1];",
									"                    var hexAsString2 = hexWithoutOx2.toString();",
									"                    var decimalNumber2 = convertBase(hexAsString2, 16, 10);",
									"                    var numberWithCommas2 = Number(decimalNumber2).toLocaleString();",
									"                    ",
									"                    value2[i].innerHTML = numberWithCommas2;",
									"                }",
									"        ",
									"        ",
									"                var value3=document.getElementsByClassName(\"gasPrice\");",
									"                for ( let i=0; i < value3.length; i++ ){",
									"                    ",
									"                    var fullHex3 = value3[i].innerText;",
									"                    var splitHex3 = fullHex3.split(\"0x\");",
									"                    var hexWithoutOx3 = splitHex3[1];",
									"                    var hexAsString3 = hexWithoutOx3.toString();",
									"                    var decimalNumber3 = convertBase(hexAsString3, 16, 10);",
									"                    var nAvax3 = decimalNumber3 / (10 ** 9);",
									"                    ",
									"                    value3[i].innerHTML = decimalNumber3 + \" Wei \" + \" = <b>\"  +  nAvax3 +  \" nAvax </b>\" ;",
									"                }",
									"        ",
									"                ",
									"                var value4 = document.getElementsByClassName(\"maxFeePerGas\");",
									"                for ( let i=0; i < value4.length; i++ ){",
									"                        ",
									"                    var fullHex4 = value4[i].innerText;",
									"                    var splitHex4 = fullHex4.split(\"0x\");",
									"                    var hexWithoutOx4 = splitHex4[1];",
									"                    var hexAsString4 = hexWithoutOx4.toString();",
									"                    var decimalNumber4 = convertBase(hexAsString4, 16, 10);",
									"                    var nAvax4 = decimalNumber4 / (10 ** 9);",
									"                        ",
									"                    value4[i].innerHTML = decimalNumber4 + \" Wei \" + \" = <b>\"  +  nAvax4 +  \" nAvax </b>\" ;",
									"                }",
									"            ",
									"                var value5 = document.getElementsByClassName(\"maxPriorityFeePerGas\");",
									"                for ( let i=0; i < value5.length; i++ ){",
									"                        ",
									"                    var fullHex5 = value5[i].innerText;",
									"                    var splitHex5 = fullHex5.split(\"0x\");",
									"                    var hexWithoutOx5 = splitHex5[1];",
									"                    var hexAsString5 = hexWithoutOx5.toString();",
									"                    var decimalNumber5 = convertBase(hexAsString5, 16, 10);",
									"                    var nAvax5 = decimalNumber5 / (10 ** 9);",
									"                        ",
									"                    value5[i].innerHTML = decimalNumber5 + \" Wei \" + \" = <b>\"  +  nAvax5 +  \" nAvax </b>\" ;",
									"                }",
									"            ",
									"                var value6=document.getElementsByClassName(\"nonce\");",
									"                for ( let i=0; i < value6.length; i++ ){",
									"                    ",
									"                    var fullHex6 = value6[i].innerText;",
									"                    var splitHex6 = fullHex6.split(\"0x\");",
									"                    var hexWithoutOx6 = splitHex6[1];",
									"                    var hexAsString6 = hexWithoutOx6.toString();",
									"                    var decimalNumber6 = convertBase(hexAsString6, 16, 10);",
									"                    ",
									"                    value6[i].innerHTML = decimalNumber6;",
									"                }",
									"        ",
									"                var value7=document.getElementsByClassName(\"transactionIndex\");",
									"                for ( let i=0; i < value7.length; i++ ){",
									"                    ",
									"                    var fullHex7 = value7[i].innerText;",
									"                    var splitHex7 = fullHex7.split(\"0x\");",
									"                    var hexWithoutOx7 = splitHex7[1];",
									"                    var hexAsString7 = hexWithoutOx7.toString();",
									"                    var decimalNumber7 = convertBase(hexAsString7, 16, 10);",
									"                    ",
									"                    value7[i].innerHTML = decimalNumber7;",
									"                }",
									"        ",
									"                var value8=document.getElementsByClassName(\"type\");",
									"                for ( let i=0; i < value8.length; i++ ){",
									"                    ",
									"                    var fullHex8 = value8[i].innerText;",
									"                    var splitHex8 = fullHex8.split(\"0x\");",
									"                    var hexWithoutOx8 = splitHex8[1];",
									"                    var hexAsString8 = hexWithoutOx8.toString();",
									"                    var decimalNumber8 = convertBase(hexAsString8, 16, 10);",
									"                    ",
									"                    if( decimalNumber8 == 0 ) {",
									"                        value8[i].innerHTML = decimalNumber8 + \" (legacy)\";",
									"                    } else if( decimalNumber8 == 2) {",
									"                        value8[i].innerHTML = decimalNumber8 + \" (EIP-1559)\";",
									"                    }",
									"                }",
									"            ",
									"                var value9=document.getElementsByClassName(\"chainId\");",
									"                for ( let i=0; i < value9.length; i++ ){",
									"                    ",
									"                    var fullHex9 = value9[i].innerText;",
									"                    var splitHex9 = fullHex9.split(\"0x\");",
									"                    var hexWithoutOx9 = splitHex9[1];",
									"                    var hexAsString9 = hexWithoutOx9.toString();",
									"                    var decimalNumber9 = convertBase(hexAsString9, 16, 10);",
									"                    ",
									"                    value9[i].innerHTML = decimalNumber9;",
									"                }",
									"            {{/if}}",
									"            ",
									"            {{#if response.result.baseFeePerGas}}",
									"                var value10=document.getElementById(\"baseFeePerGas\");",
									"",
									"                var fullHex10 = value10.innerText;",
									"                var splitHex10 = fullHex10.split(\"0x\");",
									"                var hexWithoutOx10 = splitHex10[1];",
									"                var hexAsString10 = hexWithoutOx10.toString();",
									"                var decimalNumber10 = convertBase(hexAsString10, 16, 10);",
									"                var nAvax10 = decimalNumber10 / (10 ** 9);",
									"                    ",
									"                value10.innerHTML = decimalNumber10 + \" Wei \" + \" = <b>\"  +  nAvax10 +  \" nAvax </b>\" ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.blockGasCost}}",
									"                var value11=document.getElementById(\"blockGasCost\");",
									"                    ",
									"                var fullHex11 = value11.innerText;",
									"                var splitHex11 = fullHex11.split(\"0x\");",
									"                var hexWithoutOx11 = splitHex11[1];",
									"                var hexAsString11 = hexWithoutOx11.toString();",
									"                var decimalNumber11 = convertBase(hexAsString11, 16, 10);",
									"                var nAvax11 = decimalNumber11 / (10 ** 9);",
									"                    ",
									"                value11.innerHTML = decimalNumber11 + \" Wei \" + \" = <b>\"  +  nAvax11 +  \" nAvax </b>\" ;",
									"            {{/if}}",
									"        ",
									"            {{#if response.result.difficulty}}",
									"                var value12=document.getElementById(\"difficulty\");",
									"                ",
									"                var fullHex12 = value12.innerText;",
									"                var splitHex12 = fullHex12.split(\"0x\");",
									"                var hexWithoutOx12 = splitHex12[1];",
									"                var hexAsString12 = hexWithoutOx12.toString();",
									"                var decimalNumber12 = convertBase(hexAsString12, 16, 10);",
									"                    ",
									"                value12.innerHTML = decimalNumber12;",
									"            {{/if}}",
									"",
									"            {{#if response.result.totalDifficulty}}",
									"                var value13 = document.getElementById(\"totalDifficulty\");",
									"                ",
									"                var fullHex13 = value13.innerText;",
									"                var splitHex13 = fullHex13.split(\"0x\");",
									"                var hexWithoutOx13 = splitHex13[1];",
									"                var hexAsString13 = hexWithoutOx13.toString();",
									"                var decimalNumber13 = convertBase(hexAsString13, 16, 10);",
									"                var numberWithCommas13 = Number(decimalNumber13).toLocaleString();",
									"                    ",
									"                value13.innerHTML = numberWithCommas13;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasLimit}}",
									"                var value14 = document.getElementById(\"gasLimit\");",
									"                ",
									"                var fullHex14 = value14.innerText;",
									"                var splitHex14 = fullHex14.split(\"0x\");",
									"                var hexWithoutOx14 = splitHex14[1];",
									"                var hexAsString14 = hexWithoutOx14.toString();",
									"                var decimalNumber14 = convertBase(hexAsString14, 16, 10);",
									"                var numberWithCommas14 = Number(decimalNumber14).toLocaleString();",
									"                    ",
									"                value14.innerHTML = numberWithCommas14;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasUsed}}",
									"                var value15 = document.getElementById(\"gasUsed\");",
									"                ",
									"                var fullHex15 = value15.innerText;",
									"                var splitHex15 = fullHex15.split(\"0x\");",
									"                var hexWithoutOx15 = splitHex15[1];",
									"                var hexAsString15 = hexWithoutOx15.toString();",
									"                var decimalNumber15 = convertBase(hexAsString15, 16, 10);",
									"                var numberWithCommas15 = Number(decimalNumber15).toLocaleString();",
									"                var percent = (decimalNumber15 * 100)/ decimalNumber14;",
									"                var percentRounded = percent.toFixed(2);",
									"                    ",
									"                value15.innerHTML = numberWithCommas15 + \" (\" + percentRounded + \"%)\" ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.number}}",
									"                var value16=document.getElementById(\"number\");",
									"                ",
									"                var fullHex16 = value16.innerText;",
									"                var splitHex16 = fullHex16.split(\"0x\");",
									"                var hexWithoutOx16 = splitHex16[1];",
									"                var hexAsString16 = hexWithoutOx16.toString();",
									"                var decimalNumber16 = convertBase(hexAsString16, 16, 10);",
									"                    ",
									"                value16.innerHTML = decimalNumber16;",
									"            {{/if}}",
									"",
									"            {{#if response.result.size}}",
									"                var value17 = document.getElementById(\"size\");",
									"                ",
									"                var fullHex17 = value17.innerText;",
									"                var splitHex17 = fullHex17.split(\"0x\");",
									"                var hexWithoutOx17 = splitHex17[1];",
									"                var hexAsString17 = hexWithoutOx17.toString();",
									"                var decimalNumber17 = convertBase(hexAsString17, 16, 10);",
									"                var numberWithCommas17 = Number(decimalNumber17).toLocaleString();",
									"                    ",
									"                value17.innerHTML = numberWithCommas17 + \" bytes\";",
									"            {{/if}}",
									"",
									"            {{#if response.result.extDataGasUsed}}",
									"                var value18 = document.getElementById(\"extDataGasUsed\");",
									"                ",
									"                var fullHex18 = value18.innerText;",
									"                var splitHex18 = fullHex18.split(\"0x\");",
									"                var hexWithoutOx18 = splitHex18[1];",
									"                var hexAsString18 = hexWithoutOx18.toString();",
									"                var decimalNumber18 = convertBase(hexAsString18, 16, 10);",
									"                var numberWithCommas18 = Number(decimalNumber18).toLocaleString();",
									"                    ",
									"                value18.innerHTML = numberWithCommas18;",
									"            {{/if}}",
									"",
									"        }  ",
									"",
									"        function toHex() {",
									"            {{#if response.result.transactions}}",
									"                var value0=document.getElementsByClassName(\"value\");",
									"                for ( let i=0; i < value0.length; i++ ){",
									"                    ",
									"                    var decNumber0 = value0[i].innerText;",
									"                    var getNumber0 = decNumber0.split(' Wei');",
									"                    var obtainedNumber0 = getNumber0[0];",
									"                    var asString0 = obtainedNumber0.toString();",
									"                    var hexString0 = convertBase(asString0, 10, 16);",
									"",
									"                    value0[i].innerHTML = \"0x\" +  hexString0  ;",
									"                }",
									"    ",
									"                var value1=document.getElementsByClassName(\"blockNumber\");",
									"                for ( let i=0; i < value1.length; i++ ){",
									"                    ",
									"                    var decNumber1 = value1[i].innerText;",
									"                    var asString1 = decNumber1.toString();",
									"                    var hexString1 = convertBase(asString1, 10, 16);",
									"",
									"                    value1[i].innerHTML = \"0x\" + hexString1 ;",
									"                }",
									"",
									"                var value2=document.getElementsByClassName(\"gas\");",
									"                for ( let i=0; i < value2.length; i++ ){",
									"                    ",
									"                    var decNumber2 = value2[i].innerText;",
									"                    var removeCommas2 = parseFloat(decNumber2.toString().replace(/,/g, \"\"));",
									"                    var asString2 = removeCommas2.toString();",
									"                    var hexString2 = convertBase(asString2, 10, 16);",
									"                    ",
									"                    value2[i].innerHTML = \"0x\" + hexString2 ;",
									"                }",
									"        ",
									"                var value3=document.getElementsByClassName(\"gasPrice\");",
									"                for ( let i=0; i < value3.length; i++ ){",
									"                    ",
									"                    var decNumber3 = value3[i].innerText;",
									"                    var getNumber3 = decNumber3.split(' Wei');",
									"                    var obtainedNumber3 = getNumber3[0];",
									"                    var asString3 = obtainedNumber3.toString();",
									"                    var hexString3 = convertBase(asString3, 10, 16);",
									"",
									"                    value3[i].innerHTML = \"0x\" +  hexString3  ;",
									"                }",
									"        ",
									"                var value4 = document.getElementsByClassName(\"maxFeePerGas\");",
									"                for ( let i=0; i < value4.length; i++ ){",
									"                        ",
									"                    var decNumber4 = value4[i].innerText;",
									"                    var getNumber4 = decNumber4.split(' Wei');",
									"                    var obtainedNumber4 = getNumber4[0];",
									"                    var asString4 = obtainedNumber4.toString();",
									"                    var hexString4 = convertBase(asString4, 10, 16);",
									"",
									"                    value4[i].innerHTML = \"0x\" +  hexString4  ;",
									"                }",
									"            ",
									"                var value5 = document.getElementsByClassName(\"maxPriorityFeePerGas\");",
									"                for ( let i=0; i < value5.length; i++ ){",
									"                        ",
									"                    var decNumber5 = value5[i].innerText;",
									"                    var getNumber5 = decNumber5.split(' Wei');",
									"                    var obtainedNumber5 = getNumber5[0];",
									"                    var asString5 = obtainedNumber5.toString();",
									"                    var hexString5 = convertBase(asString5, 10, 16);",
									"",
									"                    value5[i].innerHTML = \"0x\" +  hexString5  ;",
									"                }",
									"            ",
									"                var value6=document.getElementsByClassName(\"nonce\");",
									"                for ( let i=0; i < value6.length; i++ ){",
									"                    ",
									"                    var decNumber6 = value6[i].innerText;",
									"                    var asString6 = decNumber6.toString();",
									"                    var hexString6 = convertBase(asString6, 10, 16);",
									"",
									"                    value6[i].innerHTML = \"0x\" + hexString6 ;",
									"                }",
									"        ",
									"                var value7=document.getElementsByClassName(\"transactionIndex\");",
									"                for ( let i=0; i < value7.length; i++ ){",
									"                    ",
									"                    var decNumber7 = value7[i].innerText;",
									"                    var asString7 = decNumber7.toString();",
									"                    var hexString7 = convertBase(asString7, 10, 16);",
									"",
									"                    value7[i].innerHTML = \"0x\" + hexString7 ;",
									"                }",
									"        ",
									"                var value8=document.getElementsByClassName(\"type\");",
									"                for ( let i=0; i < value8.length; i++ ){",
									"                    ",
									"                    var decNumber8 = value8[i].innerText;",
									"                    var getNumber8 = decNumber8.split(' (');",
									"                    var obtainedNumber8 = getNumber8[0];",
									"                    var asString8 = obtainedNumber8.toString();",
									"                    var hexString8 = convertBase(asString8, 10, 16);",
									"",
									"                    value8[i].innerHTML = \"0x\" +  hexString8  ;      ",
									"                }",
									"            ",
									"                var value9=document.getElementsByClassName(\"chainId\");",
									"                for ( let i=0; i < value9.length; i++ ){",
									"                    ",
									"                    var decNumber9 = value9[i].innerText;",
									"                    var asString9 = decNumber9.toString();",
									"                    var hexString9 = convertBase(asString9, 10, 16);",
									"",
									"                    value9[i].innerHTML = \"0x\" + hexString9 ;",
									"                }",
									"            {{/if}}",
									"",
									"            {{#if response.result.baseFeePerGas}}",
									"                var value10 = document.getElementById(\"baseFeePerGas\");",
									"",
									"                var decNumber10 = value10.innerText;",
									"                var getNumber10 = decNumber10.split(' Wei');",
									"                var obtainedNumber10 = getNumber10[0];",
									"                var asString10 = obtainedNumber10.toString();",
									"                var hexString10 = convertBase(asString10, 10, 16);",
									"",
									"                value10.innerHTML = \"0x\" +  hexString10  ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.blockGasCost}}",
									"                var value11 = document.getElementById(\"blockGasCost\");",
									"",
									"                var decNumber11 = value11.innerText;",
									"                var getNumber11 = decNumber11.split(' Wei');",
									"                var obtainedNumber11 = getNumber11[0];",
									"                var asString11 = obtainedNumber11.toString();",
									"                var hexString11 = convertBase(asString11, 10, 16);",
									"",
									"                value11.innerHTML = \"0x\" +  hexString11  ;",
									"            {{/if}}",
									"            ",
									"            {{#if response.result.difficulty}}",
									"                var value12=document.getElementById(\"difficulty\");",
									"                    ",
									"                var decNumber12 = value12.innerText;",
									"                var asString12 = decNumber12.toString();",
									"                var hexString12 = convertBase(asString12, 10, 16);",
									"",
									"                value12.innerHTML = \"0x\" + hexString12 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.totalDifficulty}}",
									"                var value13=document.getElementById(\"totalDifficulty\");",
									"",
									"                var decNumber13 = value13.innerText;",
									"                var removeCommas13 = parseFloat(decNumber13.toString().replace(/,/g, \"\"));",
									"                var asString13 = removeCommas13.toString();",
									"                var hexString13 = convertBase(asString13, 10, 16);",
									"                    ",
									"                value13.innerHTML = \"0x\" + hexString13 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasLimit}}",
									"                var value14 = document.getElementById(\"gasLimit\");",
									"                var decNumber14 = value14.innerText;",
									"                var removeCommas14 = parseFloat(decNumber14.toString().replace(/,/g, \"\"));",
									"                var asString14 = removeCommas14.toString();",
									"                var hexString14 = convertBase(asString14, 10, 16);",
									"                    ",
									"                value14.innerHTML = \"0x\" + hexString14 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.gasUsed}}",
									"                var value15 = document.getElementById(\"gasUsed\");",
									"                var decNumber15 = value15.innerText;",
									"                var getNumber15 = decNumber15.split(' (');",
									"                var lng = getNumber15.length;",
									"                var removeCommas15 = parseFloat(getNumber15[lng-2].toString().replace(/,/g, \"\"));",
									"                var asString15 = removeCommas15.toString();",
									"                var hexString15 = convertBase(asString15, 10, 16);",
									"                ",
									"                value15.innerHTML = \"0x\" + hexString15 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.number}}",
									"                var value16=document.getElementById(\"number\");",
									"                    ",
									"                var decNumber16 = value16.innerText;",
									"                var asString16 = decNumber16.toString();",
									"                var hexString16 = convertBase(asString16, 10, 16);",
									"",
									"                value16.innerHTML = \"0x\" + hexString16 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.size}}",
									"                var value16 = document.getElementById(\"size\");",
									"                var decNumber16 = value16.innerText;",
									"                var getNumber16 = decNumber16.split(' bytes');",
									"                var removeCommas16 = parseFloat(getNumber16[0].toString().replace(/,/g, \"\"));",
									"                var asString16 = removeCommas16.toString();",
									"                var hexString16 = convertBase(asString16, 10, 16);",
									"                ",
									"                value16.innerHTML = \"0x\" + hexString16 ;",
									"            {{/if}}",
									"",
									"            {{#if response.result.extDataGasUsed}}",
									"                var value17 = document.getElementById(\"extDataGasUsed\");",
									"                var decNumber17 = value17.innerText;",
									"                var removeCommas17 = parseFloat(decNumber17.toString().replace(/,/g, \"\"));",
									"                var asString17 = removeCommas17.toString();",
									"                var hexString17 = convertBase(asString17, 10, 16);",
									"                    ",
									"                value17.innerHTML = \"0x\" + hexString17 ;",
									"            {{/if}}",
									"                ",
									"        }  ",
									"        ",
									"        function convertTimeUTC() {",
									"            var timestamp={{response.result.timestamp}};",
									"",
									"            var d = new Date(timestamp * 1000), ",
									"                yyyy = d.getFullYear(),",
									"                mm = ('0' + (d.getMonth() + 1)).slice(-2),  ",
									"                dd = ('0' + d.getDate()).slice(-2),       ",
									"                hh = d.getHours(),",
									"                h = hh,",
									"                min = ('0' + d.getMinutes()).slice(-2),     ",
									"                sec = ('0' + d.getSeconds()).slice(-2),",
									"                ampm = 'AM',",
									"                x=d.toUTCString();",
									"                time;",
									"",
									"            if (hh > 12) {",
									"                h = hh - 12;",
									"                ampm = 'PM';",
									"            } else if (hh === 12) {",
									"                h = 12;",
									"                ampm = 'PM';",
									"            } else if (hh == 0) {",
									"                h = 12;",
									"            }",
									"",
									"            ",
									"            time = yyyy + \"-\" + mm + \"-\" + dd + \", \" + h + \":\" + min + \":\" + sec + \" \" + ampm;",
									"            ",
									"            var createDate = new Date();",
									"            var offset = createDate.getTimezoneOffset(); ",
									"            var createDate = (-offset)/60;",
									"",
									"            const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;",
									"",
									"",
									"            var showTime=document.getElementById(\"time\");",
									"            if ( createDate > 0 ) {",
									"                showTime.innerHTML = time + \" \" + \"UTC +\" + createDate + \" (\" + timezone + \")\";",
									"                }",
									"            else {",
									"                showTime.innerHTML = time + \" \" + \"UTC \" + createDate;",
									"            }",
									"",
									"        }",
									"",
									"        function decimalTime() {",
									"            var showTime=document.getElementById(\"time\");",
									"            showTime.innerHTML = {{response.result.timestamp}};",
									"        }",
									"",
									"        function switchToColor() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"#F2D9D9\";",
									"                }",
									"",
									"            var block2 = document.getElementsByClassName(\"blockInfo2\")",
									"            for (let i = 0; i < block2.length; i++) {",
									"                block2[i].style.backgroundColor = \"#FFFDD0\";",
									"                }",
									"            ",
									"            var txHeader = document.getElementById(\"transactionsHeader\");",
									"            txHeader.style.backgroundColor = \"#FFDEAD\";",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"#F0F8FF\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"#FFCCCB\";",
									"                }",
									"        ",
									"            var vrs = document.getElementsByClassName(\"vrs\");",
									"            for (let i = 0; i < vrs.length; i++) {",
									"                vrs[i].style.backgroundColor = \"#E6E6FA\";",
									"                }",
									"        ",
									"            var chain = document.getElementsByClassName(\"chainInfo\");",
									"            for (let i = 0; i < chain.length; i++) {",
									"                chain[i].style.backgroundColor = \"#ECFFDC\";",
									"                }",
									"",
									"        }",
									"",
									"        function switchToGray() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"            var block2 = document.getElementsByClassName(\"blockInfo2\")",
									"            for (let i = 0; i < block2.length; i++) {",
									"                block2[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"            var txHeader = document.getElementById(\"transactionsHeader\");",
									"            txHeader.style.backgroundColor = \"transparent\";",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"transparent\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"            var vrs = document.getElementsByClassName(\"vrs\");",
									"            for (let i = 0; i < vrs.length; i++) {",
									"                vrs[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"            const chain = document.getElementsByClassName(\"chainInfo\");",
									"            for (let i = 0; i < chain.length; i++) {",
									"                chain[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"        }",
									"",
									"    </script>",
									"",
									"    <body onLoad = \"userFriendlyViewOn()\">",
									"",
									"    <table>",
									"        <tr>",
									"            <th colspan=\"3\"> Block: </th>",
									"        </tr>",
									"            ",
									"        <tr>",
									"        <td class = \"blockInfo\"> Base fee per gas: </td>",
									"        <td class = \"blockInfo\" id=\"baseFeePerGas\" colspan=\"2\"> {{response.result.baseFeePerGas}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Block gas cost: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"blockGasCost\"> {{response.result.blockGasCost}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Difficulty: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"difficulty\"> {{response.result.difficulty}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Extra gas used: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"extDataGasUsed\"> {{response.result.extDataGasUsed}} </td>",
									"        </tr>",
									"",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Extra data hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.extDataHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Extra data: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.extraData}} </td>",
									"        </tr>",
									"",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Gas limit: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"gasLimit\"> {{response.result.gasLimit}} </td>",
									"        </tr>",
									"",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Gas used: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"gasUsed\"> {{response.result.gasUsed}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.hash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Logs bloom: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.logsBloom}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Miner: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.miner}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Mix hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.mixHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Nonce: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"nonce\"> {{response.result.nonce}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Number: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"number\"> {{response.result.number}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Parent hash: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.parentHash}} </td>",
									"        </tr>",
									"        ",
									"        <tr>",
									"        <td class = \"blockInfo\"> Receipts root: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.receiptsRoot}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Sha3 uncles: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.sha3Uncles}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Size: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"size\"> {{response.result.size}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> State root: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.stateRoot}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Timestamp: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"time\"> {{response.result.timestamp}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"        <td class = \"blockInfo\"> Total difficulty: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\" id=\"totalDifficulty\"> {{response.result.totalDifficulty}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td colspan=\"3\" id=\"transactionsHeader\"> Block's transactions: </td>",
									"        </tr>",
									"        ",
									"        {{#each response.result.transactions}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"blockInfo2\"> Block hash: </td>",
									"            <td class = \"blockInfo2\" colspan=\"2\"> {{blockHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"blockInfo2\"> Block number: </td>",
									"            <td class = \"blockInfo2 blockNumber\"> {{blockNumber}}</td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td>",
									"            <td class = \"gasInfo\"> Gas: </td>",
									"            <td class = \"gasInfo gas\"> {{gas}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"gasInfo\"> Gas price: </td>",
									"            <td class = \"gasInfo gasPrice\"> {{gasPrice}} </td>",
									"        </tr>",
									"        ",
									"        {{#if maxFeePerGas}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"gasInfo\"> Max fee per gas: </td>",
									"            <td class = \"gasInfo maxFeePerGas\"> {{maxFeePerGas}} </td>",
									"        </tr>",
									"        {{/if}}",
									"  ",
									"",
									"        {{#if maxPriorityFeePerGas}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"gasInfo\"> Max priority fee per gas: </td>",
									"            <td class = \"gasInfo maxPriorityFeePerGas\"> {{maxPriorityFeePerGas}} </td>",
									"        </tr>",
									"        {{/if}}",
									"       ",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Transaction Hash: </td>",
									"            <td class = \"txInfo\"> {{hash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Input: </td>",
									"            <td class = \"txInfo\"> {{input}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Nonce: </td>",
									"            <td class = \"txInfo nonce\"> {{nonce}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> From: </td>",
									"            <td class = \"txInfo\"> {{from}} </td>",
									"        </tr>",
									"      ",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> To: </td>",
									"            <td class = \"txInfo\"> {{to}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Transaction index: </td>",
									"            <td class = \"txInfo transactionIndex\"> {{transactionIndex}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Value: </td>",
									"            <td class = \"txInfo value\"> {{value}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Type: </td>",
									"            <td class = \"txInfo type\"> {{type}} </td>",
									"        </tr>",
									"",
									"        {{#if response.result.accessList}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Input: </td>",
									"            <td class = \"txInfo\"> {{accessList}} </td>",
									"        </tr>",
									"        {{/if}}",
									"     ",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"chainInfo\"> Chain ID: </td>",
									"            <td class = \"chainInfo chainId\"> {{chainId}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"vrs\"> v: </td>",
									"            <td class = \"vrs\"> {{v}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"vrs\"> r: </td>",
									"            <td class = \"vrs\"> {{r}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"vrs\"> s: </td>",
									"            <td class = \"vrs\"> {{s}} </td>",
									"        </tr>",
									"",
									"          <tr>",
									"            <td> </td>",
									"            <td class = \"break\"> </td>",
									"            <td class = \"break\"> </td>",
									"        </tr>",
									"",
									"        {{/each}}",
									"",
									"      <tr>",
									"        <td class = \"blockInfo\"> Transactions root: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.transactionsRoot}} </td>",
									"      </tr>",
									"    ",
									"      {{#if response.result.uncles}}",
									"      <tr>",
									"        <td class = \"blockInfo\"> Uncles: </td>",
									"        <td class = \"blockInfo\" colspan=\"2\"> {{response.result.uncles}} </td>",
									"      </tr>",
									"      {{/if}}",
									"   ",
									"    </table>",
									"  `;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getBlockByNumber\",\n    \"params\": [\n        \"0x9\",\n        true\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting a block by number."
					},
					"response": []
				},
				{
					"name": "eth_getTransactionByHash",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"    <style type=\"text/css\">",
									"        table {border: 1px solid #000080; table-layout:fixed;}",
									"        td {border: 1px solid gray; word-wrap: break-word;max-width: 1000px;}",
									"        th {font-size:18px;background-color:#B0B0B0;}",
									"    ",
									"        .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"            cursor: pointer;",
									"            top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"",
									"        </style>",
									"",
									"        <b> User Friendly View: </b>",
									"        <br>",
									"        <label class=\"switch\">",
									"                <input type=\"checkbox\" checked = \"true\" onclick=\"toggle(this);\">",
									"                <div class=\"slider\"></div>",
									"        </label>",
									"        <br>",
									"        <br>",
									"",
									"    <script>",
									"       ",
									"        function userFriendlyViewOn (){",
									"            switchToColor();",
									"            toDec();",
									"        }",
									"",
									"        function userFriendlyViewOFF (){",
									"            switchToGray();",
									"            toHex();",
									"        }",
									"",
									"        function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                userFriendlyViewOn();",
									"            } else {",
									"                userFriendlyViewOFF();",
									"            }",
									"        }",
									"",
									"        function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"        function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"",
									"            return result;",
									"        }",
									"",
									"        function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"        function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"        function toDec() {",
									"                var value0 = document.getElementById(\"value\");",
									"",
									"                    var fullHex0 = value0.innerText;",
									"                    var splitHex0 = fullHex0.split(\"0x\");",
									"                    var hexWithoutOx0 = splitHex0[1];",
									"                    var hexAsString0 = hexWithoutOx0.toString();",
									"                    var decimalNumber0 = convertBase(hexAsString0, 16, 10); ",
									"                    value0.innerHTML = decimalNumber0 + \" Wei \" + \" = <b>\"  + decimalNumber0 / (10 ** 18) + \"  Avax\" +  \"</b>\" ;",
									"                ",
									"    ",
									"                var value1 = document.getElementById(\"blockNumber\");",
									"               ",
									"                    var fullHex1 = value1.innerText;",
									"                    var splitHex1 = fullHex1.split(\"0x\");",
									"                    var hexWithoutOx1 = splitHex1[1];",
									"                    var hexAsString1 = hexWithoutOx1.toString();",
									"                    var decimalNumber = convertBase(hexAsString1, 16, 10);",
									"                    value1.innerHTML = decimalNumber;",
									"",
									"                var value2 = document.getElementById(\"gas\");",
									"        ",
									"                    var fullHex2 = value2.innerText;",
									"                    var splitHex2 = fullHex2.split(\"0x\");",
									"                    var hexWithoutOx2 = splitHex2[1];",
									"                    var hexAsString2 = hexWithoutOx2.toString();",
									"                    var decimalNumber2 = convertBase(hexAsString2, 16, 10);",
									"                    var numberWithCommas2 = Number(decimalNumber2).toLocaleString();",
									"                    value2.innerHTML = numberWithCommas2;",
									"                ",
									"                var value3 = document.getElementById(\"gasPrice\");",
									"                    ",
									"                    var fullHex3 = value3.innerText;",
									"                    var splitHex3 = fullHex3.split(\"0x\");",
									"                    var hexWithoutOx3 = splitHex3[1];",
									"                    var hexAsString3 = hexWithoutOx3.toString();",
									"                    var decimalNumber3 = convertBase(hexAsString3, 16, 10);",
									"                    var nAvax3 = decimalNumber3 / (10 ** 9);",
									"                    value3.innerHTML = decimalNumber3 + \" Wei \" + \" = <b>\"  +  nAvax3 +  \" nAvax </b>\" ;",
									"            ",
									"        ",
									"                {{#if response.result.maxFeePerGas}}",
									"                    var value4 = document.getElementById(\"maxFeePerGas\");",
									"                    ",
									"                        var fullHex4 = value4.innerText;",
									"                        var splitHex4 = fullHex4.split(\"0x\");",
									"                        var hexWithoutOx4 = splitHex4[1];",
									"                        var hexAsString4 = hexWithoutOx4.toString();",
									"                        var decimalNumber4 = convertBase(hexAsString4, 16, 10);",
									"                        var nAvax4 = decimalNumber4 / (10 ** 9);   ",
									"",
									"                        ",
									"                        value4.innerHTML = decimalNumber4 + \" Wei \" + \" = <b>\"  +  nAvax4 +  \" nAvax </b>\" ;",
									"                {{/if}}",
									"               ",
									"                {{#if response.result.maxPriorityFeePerGas}}",
									"                    var value5 = document.getElementById(\"maxPriorityFeePerGas\"); ",
									"",
									"                        var fullHex5 = value5.innerText;",
									"                        var splitHex5 = fullHex5.split(\"0x\");",
									"                        var hexWithoutOx5 = splitHex5[1];",
									"                        var hexAsString5 = hexWithoutOx5.toString();",
									"                        var decimalNumber5 = convertBase(hexAsString5, 16, 10);",
									"                        var nAvax5 = decimalNumber5 / (10 ** 9);",
									"                        value5.innerHTML = decimalNumber5 + \" Wei \" + \" = <b>\"  +  nAvax5 +  \" nAvax </b>\" ;",
									"                {{/if}}",
									"",
									"                var value6 = document.getElementById(\"nonce\");",
									"                    ",
									"                    var fullHex6 = value6.innerText;",
									"                    var splitHex6 = fullHex6.split(\"0x\");",
									"                    var hexWithoutOx6 = splitHex6[1];",
									"                    var hexAsString6 = hexWithoutOx6.toString();",
									"                    var decimalNumber6 = convertBase(hexAsString6, 16, 10);",
									"                    value6.innerHTML = decimalNumber6;",
									"",
									"                var value7=document.getElementById(\"transactionIndex\");",
									"                    ",
									"                    var fullHex7 = value7.innerText;",
									"                    var splitHex7 = fullHex7.split(\"0x\");",
									"                    var hexWithoutOx7 = splitHex7[1];",
									"                    var hexAsString7 = hexWithoutOx7.toString();",
									"                    var decimalNumber7 = convertBase(hexAsString7, 16, 10);",
									"                    value7.innerHTML = decimalNumber7;",
									"        ",
									"                var value8=document.getElementById(\"type\");",
									"                    ",
									"                    var fullHex8 = value8.innerText;",
									"                    var splitHex8 = fullHex8.split(\"0x\");",
									"                    var hexWithoutOx8 = splitHex8[1];",
									"                    var hexAsString8 = hexWithoutOx8.toString();",
									"                    var decimalNumber8 = convertBase(hexAsString8, 16, 10);",
									"                    ",
									"                    if( decimalNumber8 == 0 ) {",
									"                        value8.innerHTML = decimalNumber8 + \" (legacy)\";",
									"                    } else if( decimalNumber8 == 2) {",
									"                        value8.innerHTML = decimalNumber8 + \" (EIP-1559)\";",
									"                    }",
									"                ",
									"            ",
									"                var value9=document.getElementById(\"chainId\");",
									"                    ",
									"                    var fullHex9 = value9.innerText;",
									"                    var splitHex9 = fullHex9.split(\"0x\");",
									"                    var hexWithoutOx9 = splitHex9[1];",
									"                    var hexAsString9 = hexWithoutOx9.toString();",
									"                    var decimalNumber9 = convertBase(hexAsString9, 16, 10);",
									"                    value9.innerHTML = decimalNumber9;",
									"            ",
									"        }  ",
									"",
									"        function toHex() {",
									"                var value0=document.getElementById(\"value\");",
									"                    ",
									"                    var decNumber0 = value0.innerText;",
									"                    var getNumber0 = decNumber0.split(' Wei');",
									"                    var obtainedNumber0 = getNumber0[0];",
									"                    var asString0 = obtainedNumber0.toString();",
									"                    var hexString0 = convertBase(asString0, 10, 16);",
									"                    value0.innerHTML = \"0x\" +  hexString0  ;",
									"                ",
									"    ",
									"                var value1=document.getElementById(\"blockNumber\");",
									"                    ",
									"                    var decNumber1 = value1.innerText;",
									"                    var asString1 = decNumber1.toString();",
									"                    var hexString1 = convertBase(asString1, 10, 16);",
									"                    value1.innerHTML = \"0x\" + hexString1 ;",
									"                ",
									"                var value2=document.getElementById(\"gas\");",
									"",
									"                    var decNumber2 = value2.innerText;",
									"                    var removeCommas2 = parseFloat(decNumber2.toString().replace(/,/g, \"\"));",
									"                    var asString2 = removeCommas2.toString();",
									"                    var hexString2 = convertBase(asString2, 10, 16);",
									"                    value2.innerHTML = \"0x\" + hexString2 ;",
									"        ",
									"                var value3=document.getElementById(\"gasPrice\");",
									"",
									"                    var decNumber3 = value3.innerText;",
									"                    var getNumber3 = decNumber3.split(' Wei');",
									"                    var obtainedNumber3 = getNumber3[0];",
									"                    var asString3 = obtainedNumber3.toString();",
									"                    var hexString3 = convertBase(asString3, 10, 16);",
									"                    value3.innerHTML = \"0x\" +  hexString3  ;",
									"",
									"                {{#if response.result.maxFeePerGas}}",
									"                    var value4 = document.getElementById(\"maxFeePerGas\");",
									"                            ",
									"                        var decNumber4 = value4.innerText;",
									"                        var getNumber4 = decNumber4.split(' Wei');",
									"                        var obtainedNumber4 = getNumber4[0];",
									"                        var asString4 = obtainedNumber4.toString();",
									"                        var hexString4 = convertBase(asString4, 10, 16);",
									"                        value4.innerHTML = \"0x\" +  hexString4  ;",
									"                {{/if}}",
									"",
									"                {{#if response.result.maxPriorityFeePerGas}}",
									"                    var value5 = document.getElementById(\"maxPriorityFeePerGas\");",
									"                            ",
									"                        var decNumber5 = value5.innerText;",
									"                        var getNumber5 = decNumber5.split(' Wei');",
									"                        var obtainedNumber5 = getNumber5[0];",
									"                        var asString5 = obtainedNumber5.toString();",
									"                        var hexString5 = convertBase(asString5, 10, 16);",
									"                        value5.innerHTML = \"0x\" +  hexString5  ;",
									"                {{/if}}",
									"",
									"                var value6=document.getElementById(\"nonce\");",
									"                    ",
									"                    var decNumber6 = value6.innerText;",
									"                    var asString6 = decNumber6.toString();",
									"                    var hexString6 = convertBase(asString6, 10, 16);",
									"                    value6.innerHTML = \"0x\" + hexString6 ;",
									"        ",
									"                var value7=document.getElementById(\"transactionIndex\");",
									"                    ",
									"                    var decNumber7 = value7.innerText;",
									"                    var asString7 = decNumber7.toString();",
									"                    var hexString7 = convertBase(asString7, 10, 16);",
									"                    value7.innerHTML = \"0x\" + hexString7 ;",
									"        ",
									"                var value8=document.getElementById(\"type\");",
									"                    ",
									"                    var decNumber8 = value8.innerText;",
									"                    var getNumber8 = decNumber8.split(' (');",
									"                    var obtainedNumber8 = getNumber8[0];",
									"                    var asString8 = obtainedNumber8.toString();",
									"                    var hexString8 = convertBase(asString8, 10, 16);",
									"                    value8.innerHTML = \"0x\" +  hexString8  ;      ",
									"                ",
									"            ",
									"                var value9=document.getElementById(\"chainId\");",
									"                    ",
									"                    var decNumber9 = value9.innerText;",
									"                    var asString9 = decNumber9.toString();",
									"                    var hexString9 = convertBase(asString9, 10, 16);",
									"                    value9.innerHTML = \"0x\" + hexString9 ;",
									"                       ",
									"        }  ",
									"        ",
									"    function switchToColor() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"#FFFDD0\";",
									"                }",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"#F0F8FF\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"#FFCCCB\";",
									"                }",
									"        ",
									"            var vrs = document.getElementsByClassName(\"vrs\");",
									"            for (let i = 0; i < vrs.length; i++) {",
									"                vrs[i].style.backgroundColor = \"#E6E6FA\";",
									"                }",
									"        ",
									"            const chain = document.getElementsByClassName(\"chainInfo\");",
									"            for (let i = 0; i < chain.length; i++) {",
									"                chain[i].style.backgroundColor = \"#ECFFDC\";",
									"                }",
									"",
									"        }",
									"",
									"        function switchToGray() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"transparent\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"            var vrs = document.getElementsByClassName(\"vrs\");",
									"            for (let i = 0; i < vrs.length; i++) {",
									"                vrs[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"            const chain = document.getElementsByClassName(\"chainInfo\");",
									"            for (let i = 0; i < chain.length; i++) {",
									"                chain[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"        }",
									"",
									"    </script>",
									"",
									"    <body onLoad=\"userFriendlyViewOn();\">",
									"",
									"    <table>",
									"        <tr>",
									"            <th colspan=\"2\"> Transaction </th>",
									"        </tr>",
									"            ",
									"        <tr>",
									"            <td class = \"blockInfo\"> Block hash: </td>",
									"            <td class = \"blockInfo\" colspan=\"2\"> {{response.result.blockHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"blockInfo\"> Block number: </td>",
									"            <td class = \"blockInfo\" id=\"blockNumber\"> {{response.result.blockNumber}}</td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"gasInfo\"> Gas: </td>",
									"            <td class = \"gasInfo\" id=\"gas\"> {{response.result.gas}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"gasInfo\"> Gas price: </td>",
									"            <td class = \"gasInfo\" id=\"gasPrice\"> {{response.result.gasPrice}} </td>",
									"        </tr>",
									"        ",
									"        {{#if response.result.maxFeePerGas}}",
									"        <tr>",
									"            <td class = \"gasInfo\"> Max fee per gas: </td>",
									"            <td class = \"gasInfo\" id=\"maxFeePerGas\"> {{response.result.maxFeePerGas}} </td>",
									"        </tr>",
									"        {{/if}}",
									"  ",
									"",
									"        {{#if response.result.maxPriorityFeePerGas}}",
									"        <tr>",
									"            <td class = \"gasInfo\"> Max priority fee per gas: </td>",
									"            <td class = \"gasInfo\" id=\"maxPriorityFeePerGas\"> {{response.result.maxPriorityFeePerGas}} </td>",
									"        </tr>",
									"        {{/if}}",
									"       ",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Transaction Hash: </td>",
									"            <td class = \"txInfo\"> {{response.result.hash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Input: </td>",
									"            <td class = \"txInfo\"> {{response.result.input}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Nonce: </td>",
									"            <td class = \"txInfo\" id=\"nonce\"> {{response.result.nonce}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> From: </td>",
									"            <td class = \"txInfo\"> {{response.result.from}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> To: </td>",
									"            <td class = \"txInfo\"> {{response.result.to}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Transaction index: </td>",
									"            <td class = \"txInfo\" id=\"transactionIndex\"> {{response.result.transactionIndex}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Value: </td>",
									"            <td class = \"txInfo\" id=\"value\"> {{response.result.value}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Type: </td>",
									"            <td class = \"txInfo\" id=\"type\"> {{response.result.type}} </td>",
									"        </tr>",
									"",
									"        {{#if response.result.accessList}}",
									"        <tr>",
									"            <td class = \"txInfo\"> Input: </td>",
									"            <td class = \"txInfo\"> {{response.result.accessList}} </td>",
									"        </tr>",
									"        {{/if}}",
									"     ",
									"",
									"        <tr>",
									"            <td class = \"chainInfo\"> Chain ID: </td>",
									"            <td class = \"chainInfo\" id=\"chainId\"> {{response.result.chainId}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"vrs\"> v: </td>",
									"            <td class = \"vrs\"> {{response.result.v}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"vrs\"> r: </td>",
									"            <td class = \"vrs\"> {{response.result.r}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"vrs\"> s: </td>",
									"            <td class = \"vrs\"> {{response.result.s}} </td>",
									"        </tr>",
									"",
									"    </table>",
									"  `;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getTransactionByHash\",\n    \"params\": [\n        \"0x6f3d0d18433bf0839822a3ea5dec57251197b39b4cda24f685c24a57f6a4cf84\"\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting a transaction by hash."
					},
					"response": []
				},
				{
					"name": "eth_getTransactionReceipt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var table = `",
									"    <style type=\"text/css\">",
									"        table {border: 1px solid #000080; table-layout:fixed;}",
									"        td {border: 1px solid gray; word-wrap: break-word;max-width: 1000px;}",
									"        th {font-size:18px;background-color:#B0B0B0;}",
									"",
									"        .break {background-color:black;}",
									"    ",
									"        .switch {",
									"            position: relative;",
									"            display: inline-block;",
									"            width: 60px;",
									"            height: 34px;",
									"        }",
									"",
									"        .switch input {display:none;}",
									"",
									"        .slider {",
									"            position: absolute;",
									"            cursor: pointer;",
									"            top: 0;",
									"            left: 0;",
									"            right: 0;",
									"            bottom: 0;",
									"            background-color: #ccc;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        .slider:before {",
									"            position: absolute;",
									"            content: \"\";",
									"            height: 26px;",
									"            width: 26px;",
									"            left: 4px;",
									"            bottom: 4px;",
									"            background-color: white;",
									"            -webkit-transition: .4s;",
									"            transition: .4s;",
									"        }",
									"",
									"        input:checked + .slider {",
									"            background-color: red;",
									"        }",
									"",
									"        input:focus + .slider {",
									"             box-shadow: 0 0 1px #2196F3;",
									"        }",
									"",
									"        input:checked + .slider:before {",
									"            -webkit-transform: translateX(26px);",
									"            -ms-transform: translateX(26px);",
									"            transform: translateX(26px);",
									"        }",
									"",
									"        </style>",
									"",
									"        <b> User Friendly View: </b>",
									"        <br>",
									"        <label class=\"switch\">",
									"                <input type=\"checkbox\" checked = \"true\" onclick=\"toggle(this);\">",
									"                <div class=\"slider\"></div>",
									"        </label>",
									"        <br>",
									"        <br>",
									"",
									"    <script>",
									"       ",
									"        function userFriendlyViewOn (){",
									"            switchToColor();",
									"            toDec();",
									"        }",
									"",
									"        function userFriendlyViewOFF (){",
									"            switchToGray();",
									"            toHex(); ",
									"        }",
									"",
									"        function toggle(checkbox) {",
									"            if (checkbox.checked) {",
									"                userFriendlyViewOn();",
									"            } else {",
									"                userFriendlyViewOFF();",
									"            }",
									"        }",
									"",
									"        function contractNull() {",
									"            var contractCell = document.getElementById(\"contract\");",
									"            var cellText = contractCell.innerText;",
									"            if (!cellText){",
									"                contractCell.innerHTML = \"null\"; ",
									"                } ",
									"        }",
									"",
									"        function splitTopics() {",
									"            {{#if response.result.logs}}",
									"            var getTopics = document.getElementsByClassName(\"clsTopics\");",
									"            for (let i = 0; i < getTopics.length; i++) {",
									"                var topicsArray = getTopics[i].innerText;",
									"                var splitThem = topicsArray.split(',')",
									"                for (let j = 0; j < splitThem.length; j++){",
									"                        splitThem[j] = splitThem[j] + \" <br> <br> \";",
									"                        }",
									"                var displayTopics = splitThem.toString().replace(/,/g, \"\")     ",
									"                getTopics[i].innerHTML = displayTopics;",
									"            }",
									"            {{/if}}",
									"        }",
									"",
									"        function add(x, y, base) {",
									"            var z = [];",
									"            var n = Math.max(x.length, y.length);",
									"            var carry = 0;",
									"            var i = 0;",
									"            while (i < n || carry) {",
									"                var xi = i < x.length ? x[i] : 0;",
									"                var yi = i < y.length ? y[i] : 0;",
									"                var zi = carry + xi + yi;",
									"                z.push(zi % base);",
									"                carry = Math.floor(zi / base);",
									"                i++;",
									"            }",
									"            return z;",
									"        }",
									"",
									"        function multiplyByNumber(num, x, base) {",
									"            if (num < 0) return null;",
									"            if (num == 0) return [];",
									"",
									"            var result = [];",
									"            var power = x;",
									"            while (true) {",
									"                if (num & 1) {",
									"                result = add(result, power, base);",
									"                }",
									"                num = num >> 1;",
									"                if (num === 0) break;",
									"                power = add(power, power, base);",
									"            }",
									"",
									"            return result;",
									"        }",
									"",
									"        function parseToDigitsArray(str, base) {",
									"            var digits = str.split('');",
									"            var ary = [];",
									"            for (var i = digits.length - 1; i >= 0; i--) {",
									"                var n = parseInt(digits[i], base);",
									"                if (isNaN(n)) return null;",
									"                ary.push(n);",
									"            }",
									"            return ary;",
									"        }",
									"",
									"        function convertBase(str, fromBase, toBase) {",
									"            var digits = parseToDigitsArray(str, fromBase);",
									"            if (digits === null) return null;",
									"            if (digits == 0) return 0;",
									"",
									"            var outArray = [];",
									"            var power = [1];",
									"            for (var i = 0; i < digits.length; i++) {",
									"                // invariant: at this point, fromBase^i = power",
									"                if (digits[i]) {",
									"                outArray = add(outArray, multiplyByNumber(digits[i], power, toBase), toBase);",
									"                }",
									"                power = multiplyByNumber(fromBase, power, toBase);",
									"            }",
									"",
									"            var out = '';",
									"            for (var i = outArray.length - 1; i >= 0; i--) {",
									"                out += outArray[i].toString(toBase);",
									"            }",
									"            return out;",
									"        }",
									"",
									"        function toDec() {",
									"    ",
									"                var value1 = document.getElementById(\"blockNumber\");",
									"               ",
									"                    var fullHex1 = value1.innerText;",
									"                    var splitHex1 = fullHex1.split(\"0x\");",
									"                    var hexWithoutOx1 = splitHex1[1];",
									"                    var hexAsString1 = hexWithoutOx1.toString();",
									"                    var decimalNumber = convertBase(hexAsString1, 16, 10);",
									"                    value1.innerHTML = decimalNumber;",
									"",
									"                var value2 = document.getElementById(\"cumulativeGasUsed\");",
									"        ",
									"                    var fullHex2 = value2.innerText;",
									"                    var splitHex2 = fullHex2.split(\"0x\");",
									"                    var hexWithoutOx2 = splitHex2[1];",
									"                    var hexAsString2 = hexWithoutOx2.toString();",
									"                    var decimalNumber2 = convertBase(hexAsString2, 16, 10);",
									"                    var numberWithCommas2 = Number(decimalNumber2).toLocaleString();",
									"                    value2.innerHTML = numberWithCommas2;",
									"                ",
									"                var value3 = document.getElementById(\"effectiveGasPrice\");",
									"                    ",
									"                    var fullHex3 = value3.innerText;",
									"                    var splitHex3 = fullHex3.split(\"0x\");",
									"                    var hexWithoutOx3 = splitHex3[1];",
									"                    var hexAsString3 = hexWithoutOx3.toString();",
									"                    var decimalNumber3 = convertBase(hexAsString3, 16, 10);",
									"                    var nAvax3 = decimalNumber3 / (10 ** 9);",
									"                    value3.innerHTML = decimalNumber3 + \" Wei \" + \" = <b>\"  +  nAvax3 +  \" nAvax </b>\" ;",
									"            ",
									"        ",
									"               var value4 = document.getElementById(\"gasUsed\");",
									"        ",
									"                    var fullHex4 = value4.innerText;",
									"                    var splitHex4 = fullHex4.split(\"0x\");",
									"                    var hexWithoutOx4 = splitHex4[1];",
									"                    var hexAsString4 = hexWithoutOx4.toString();",
									"                    var decimalNumber4 = convertBase(hexAsString4, 16, 10);",
									"                    var numberWithCommas4 = Number(decimalNumber4).toLocaleString();",
									"                    value4.innerHTML = numberWithCommas4;",
									"",
									"                var value6 = document.getElementById(\"status\");",
									"                    ",
									"                    var fullHex6 = value6.innerText;",
									"                    var splitHex6 = fullHex6.split(\"0x\");",
									"                    var hexWithoutOx6 = splitHex6[1];",
									"                    var hexAsString6 = hexWithoutOx6.toString();",
									"                    var decimalNumber6 = convertBase(hexAsString6, 16, 10);",
									"                    value6.innerHTML = decimalNumber6;",
									"",
									"                var value7=document.getElementById(\"transactionIndex\");",
									"                    ",
									"                    var fullHex7 = value7.innerText;",
									"                    var splitHex7 = fullHex7.split(\"0x\");",
									"                    var hexWithoutOx7 = splitHex7[1];",
									"                    var hexAsString7 = hexWithoutOx7.toString();",
									"                    var decimalNumber7 = convertBase(hexAsString7, 16, 10);",
									"                    value7.innerHTML = decimalNumber7;",
									"        ",
									"                var value8=document.getElementById(\"type\");",
									"                    ",
									"                    var fullHex8 = value8.innerText;",
									"                    var splitHex8 = fullHex8.split(\"0x\");",
									"                    var hexWithoutOx8 = splitHex8[1];",
									"                    var hexAsString8 = hexWithoutOx8.toString();",
									"                    var decimalNumber8 = convertBase(hexAsString8, 16, 10);",
									"                    ",
									"                    if( decimalNumber8 == 0 ) {",
									"                        value8.innerHTML = decimalNumber8 + \" (legacy)\";",
									"                    } else if( decimalNumber8 == 2) {",
									"                        value8.innerHTML = decimalNumber8 + \" (EIP-1559)\";",
									"                    }",
									"                ",
									"                {{#if response.result.logs}}",
									"                    var value9 = document.getElementsByClassName(\"logsTransactionIndex\");",
									"                    for ( let i=0; i < value9.length; i++ ){",
									"                            var fullHex9 = value9[i].innerText;",
									"                            var splitHex9 = fullHex9.split(\"0x\");",
									"                            var hexWithoutOx9 = splitHex9[1];",
									"                            var hexAsString9 = hexWithoutOx9.toString();",
									"                            var decimalNumber9 = convertBase(hexAsString9, 16, 10);",
									"                            value9[i].innerHTML = decimalNumber9;",
									"                        }",
									"",
									"                    var value10 = document.getElementsByClassName(\"logsBlockNumber\");",
									"                    for ( let i=0; i < value10.length; i++ ){",
									"                            var fullHex10 = value10[i].innerText;",
									"                            var splitHex10 = fullHex10.split(\"0x\");",
									"                            var hexWithoutOx10 = splitHex10[1];",
									"                            var hexAsString10 = hexWithoutOx10.toString();",
									"                            var decimalNumber10 = convertBase(hexAsString10, 16, 10);",
									"                        ",
									"                            value10[i].innerHTML = decimalNumber10;",
									"                        }",
									"",
									"                    var value11 = document.getElementsByClassName(\"logIndex\");",
									"                    for ( let i=0; i < value11.length; i++ ){",
									"                            var fullHex11 = value11[i].innerText;",
									"                            var splitHex11 = fullHex11.split(\"0x\");",
									"                            var hexWithoutOx11 = splitHex11[1];",
									"                            var hexAsString11 = hexWithoutOx11.toString();",
									"                            var decimalNumber11 = convertBase(hexAsString11, 16, 10);",
									"                        ",
									"                            value11[i].innerHTML = decimalNumber11;",
									"                        }",
									"                {{/if}}",
									"            ",
									"        }  ",
									"",
									"        function toHex() {",
									"          ",
									"                var value1=document.getElementById(\"blockNumber\");",
									"                    ",
									"                    var decNumber1 = value1.innerText;",
									"                    var asString1 = decNumber1.toString();",
									"                    var hexString1 = convertBase(asString1, 10, 16);",
									"                    value1.innerHTML = \"0x\" + hexString1 ;",
									"                ",
									"                var value2=document.getElementById(\"cumulativeGasUsed\");",
									"",
									"                    var decNumber2 = value2.innerText;",
									"                    var removeCommas2 = parseFloat(decNumber2.toString().replace(/,/g, \"\"));",
									"                    var asString2 = removeCommas2.toString();",
									"                    var hexString2 = convertBase(asString2, 10, 16);",
									"                    value2.innerHTML = \"0x\" + hexString2 ;",
									"        ",
									"                var value3=document.getElementById(\"effectiveGasPrice\");",
									"",
									"                    var decNumber3 = value3.innerText;",
									"                    var getNumber3 = decNumber3.split(' Wei');",
									"                    var obtainedNumber3 = getNumber3[0];",
									"                    var asString3 = obtainedNumber3.toString();",
									"                    var hexString3 = convertBase(asString3, 10, 16);",
									"                    value3.innerHTML = \"0x\" +  hexString3  ;",
									"",
									"                 var value4=document.getElementById(\"gasUsed\");",
									"",
									"                    var decNumber4 = value4.innerText;",
									"                    var removeCommas4 = parseFloat(decNumber4.toString().replace(/,/g, \"\"));",
									"                    var asString4 = removeCommas4.toString();",
									"                    var hexString4 = convertBase(asString4, 10, 16);",
									"                    value4.innerHTML = \"0x\" + hexString4 ;",
									"                ",
									"",
									"                var value6=document.getElementById(\"status\");",
									"                    ",
									"                    var decNumber6 = value6.innerText;",
									"                    var asString6 = decNumber6.toString();",
									"                    var hexString6 = convertBase(asString6, 10, 16);",
									"                    value6.innerHTML = \"0x\" + hexString6 ;",
									"        ",
									"                var value7=document.getElementById(\"transactionIndex\");",
									"                    ",
									"                    var decNumber7 = value7.innerText;",
									"                    var asString7 = decNumber7.toString();",
									"                    var hexString7 = convertBase(asString7, 10, 16);",
									"                    value7.innerHTML = \"0x\" + hexString7 ;",
									"        ",
									"                var value8=document.getElementById(\"type\");",
									"                    ",
									"                    var decNumber8 = value8.innerText;",
									"                    var getNumber8 = decNumber8.split(' (');",
									"                    var obtainedNumber8 = getNumber8[0];",
									"                    var asString8 = obtainedNumber8.toString();",
									"                    var hexString8 = convertBase(asString8, 10, 16);",
									"                    value8.innerHTML = \"0x\" +  hexString8  ;      ",
									"                ",
									"                {{#if response.result.logs}}",
									"                     ",
									"                    var value9 = document.getElementsByClassName(\"logsTransactionIndex\");",
									"                    for ( let i=0; i < value9.length; i++ ){",
									"                        var decNumber9 = value9[i].innerText;",
									"                        var asString9 = decNumber9.toString();",
									"                        var hexString9 = convertBase(asString9, 10, 16);",
									"                        value9[i].innerHTML = \"0x\" + hexString9 ;",
									"                    }",
									"",
									"                    var value10 = document.getElementsByClassName(\"logsBlockNumber\");",
									"                    for ( let i=0; i < value10.length; i++ ){",
									"                        var decNumber10 = value10[i].innerText;",
									"                        var asString10 = decNumber10.toString();",
									"                        var hexString10 = convertBase(asString10, 10, 16);",
									"                        value10[i].innerHTML = \"0x\" + hexString10 ;",
									"                    }",
									"",
									"                    var value11 = document.getElementsByClassName(\"logIndex\");",
									"                    for ( let i=0; i < value11.length; i++ ){",
									"                        var decNumber11 = value11[i].innerText;",
									"                        var asString11 = decNumber11.toString();",
									"                        var hexString11 = convertBase(asString11, 10, 16);",
									"                        value11[i].innerHTML = \"0x\" + hexString11 ;",
									"                    }",
									"                {{/if}}      ",
									"        }  ",
									"        ",
									"    function switchToColor() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"#FFFDD0\";",
									"                }",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"#F0F8FF\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"#FFCCCB\";",
									"                }",
									"        }",
									"",
									"        function switchToGray() { ",
									"            var block = document.getElementsByClassName(\"blockInfo\");",
									"            for (let i = 0; i < block.length; i++) {",
									"                block[i].style.backgroundColor = \"transparent\";",
									"                }",
									"",
									"            var tx = document.getElementsByClassName(\"txInfo\");",
									"            for (let i = 0; i < tx.length; i++) {",
									"                tx[i].style.backgroundColor = \"transparent\";",
									"                }",
									"    ",
									"            var gas = document.getElementsByClassName(\"gasInfo\");",
									"            for (let i = 0; i < gas.length; i++) {",
									"                gas[i].style.backgroundColor = \"transparent\";",
									"                }",
									"        ",
									"        }",
									"",
									"    </script>",
									"",
									"   <body onLoad = \"userFriendlyViewOn(), contractNull(), splitTopics()\">",
									"",
									"    <table>",
									"        <tr>",
									"            <th colspan=\"3\"> Transaction receipt </th>",
									"        </tr>",
									"            ",
									"        <tr>",
									"            <td class = \"blockInfo\"> Block hash: </td>",
									"            <td class = \"blockInfo\" colspan=\"2\"> {{response.result.blockHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"blockInfo\"> Block number: </td>",
									"            <td class = \"blockInfo\" id=\"blockNumber\" colspan=\"2\"> {{response.result.blockNumber}}</td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"gasInfo\"> Cumulative gas used: </td>",
									"            <td class = \"gasInfo\" id=\"cumulativeGasUsed\" colspan=\"2\"> {{response.result.cumulativeGasUsed}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"gasInfo\"> Effective gas price: </td>",
									"            <td class = \"gasInfo\" id=\"effectiveGasPrice\" colspan=\"2\"> {{response.result.effectiveGasPrice}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"gasInfo\"> Gas used: </td>",
									"            <td class = \"gasInfo\" id=\"gasUsed\" colspan=\"2\"> {{response.result.gasUsed}} </td>",
									"        </tr>",
									"       ",
									"    ",
									"        <tr>",
									"            <td class = \"txInfo\" colspan=\"3\"> Logs: </td>",
									"        </tr>",
									"",
									"        {{#each response.result.logs}}",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Address: </td>",
									"            <td class = \"txInfo\"> {{address}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Topics: </td>",
									"            <td class = \"txInfo clsTopics\"> {{topics}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Data: </td>",
									"            <td class = \"txInfo\"> {{data}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Transaction Hash: </td>",
									"            <td class = \"txInfo\"> {{transactionHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Transaction Index: </td>",
									"            <td class = \"txInfo logsTransactionIndex\" > {{transactionIndex}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"blockInfo\"> Block number: </td>",
									"            <td class = \"blockInfo logsBlockNumber\" > {{blockNumber}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"blockInfo\"> Block hash: </td>",
									"            <td class = \"blockInfo\"> {{blockHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Log index: </td>",
									"            <td class = \"txInfo logIndex\" > {{logIndex}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"txInfo\"> Removed: </td>",
									"            <td class = \"txInfo\"> {{removed}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td> </td>",
									"            <td class = \"break\"> </td>",
									"            <td class = \"break\"> </td>",
									"        </tr>",
									"        {{/each}}",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Logs bloom: </td>",
									"            <td class = \"txInfo\" colspan=\"2\"> {{response.result.logsBloom}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Contract address: </td>",
									"            <td class = \"txInfo\" id=\"contract\" colspan=\"2\"> {{response.result.contractAddress}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Status: </td>",
									"            <td class = \"txInfo\" id=\"status\" colspan=\"2\"> {{response.result.status}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> From: </td>",
									"            <td class = \"txInfo\" colspan=\"2\"> {{response.result.from}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> To: </td>",
									"            <td class = \"txInfo\" colspan=\"2\"> {{response.result.to}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Transaction hash: </td>",
									"            <td class = \"txInfo\" colspan=\"2\"> {{response.result.transactionHash}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Transaction index: </td>",
									"            <td class = \"txInfo\" id=\"transactionIndex\" colspan=\"2\"> {{response.result.transactionIndex}} </td>",
									"        </tr>",
									"",
									"        <tr>",
									"            <td class = \"txInfo\"> Type: </td>",
									"            <td class = \"txInfo\" id=\"type\" colspan=\"2\"> {{response.result.type}} </td>",
									"        </tr>",
									"",
									"    </table>",
									"",
									" `;",
									"",
									"pm.visualizer.set(table, {",
									"    response: pm.response.json(),",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"eth_getTransactionReceipt\",\n    \"params\": [\n        \"0x631dc45342a47d360915ea0d193fc317777f8061fe57b4a3e790e49d26960202\"\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting a transaction receipt."
					},
					"response": []
				},
				{
					"name": "issueTx",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\":\"2.0\",\n    \"id\"     : 1,\n    \"method\" :\"avax.issueTx\",\n    \"params\" :{\n        \"tx\":\"0x00\",\n        \"encoding\": \"hex\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Send a signed transaction to the network. [More info](https://docs.avax.network/apis/avalanchego/apis/c-chain#avaxissuetx)"
					},
					"response": []
				},
				{
					"name": "web3_clientVersion",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"web3_clientVersion\",\n    \"params\": [],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Getting the current client version."
					},
					"response": []
				},
				{
					"name": "web3_sha3",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"jsonrpc\": \"2.0\",\n    \"method\": \"web3_sha3\",\n    \"params\": [\n        \"0x736e6f7773746f726d\"\n    ],\n    \"id\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}",
							"host": [
								"{{baseURL}}"
							]
						},
						"description": "Calculate a cryptographic hash.\n\nThe input parameter contains hexidecimal bytes of arbitrary length. The example here uses the UTF-8 text string “snowstorm” converted to hexidecimal bytes."
					},
					"response": []
				}
			],
			"description": "This document describes the API of the C-Chain, which is an instance of the Ethereum Virtual Machine (EVM.)\n\nNote: Ethereum has its own notion of `networkID` and `chainID`. The C-Chain uses `1` and `43110` for these values, obtained using the `net_version` and `eth_chainId` methods shown below. These have no relationship to AVA’s view of networkID and chainID, and are purely internal to the C-Chain. [More info](https://docs.avax.network/v1.0/en/api/evm)"
		}
	]
}